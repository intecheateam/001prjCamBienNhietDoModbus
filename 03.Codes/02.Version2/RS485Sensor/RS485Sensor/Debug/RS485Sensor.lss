
RS485Sensor.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000014c2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000004  00800060  000014c2  00001556  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000031  00800064  00800064  0000155a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000155a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000158c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000250  00000000  00000000  000015c8  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002439  00000000  00000000  00001818  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000daf  00000000  00000000  00003c51  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001ab5  00000000  00000000  00004a00  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000580  00000000  00000000  000064b8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000009a8  00000000  00000000  00006a38  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000020ca  00000000  00000000  000073e0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000170  00000000  00000000  000094aa  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 3c 00 	jmp	0x78	; 0x78 <__ctors_end>
       4:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
       8:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
       c:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
      10:	0c 94 bf 03 	jmp	0x77e	; 0x77e <__vector_4>
      14:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
      18:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
      1c:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
      20:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
      24:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
      28:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
      2c:	0c 94 9b 03 	jmp	0x736	; 0x736 <__vector_11>
      30:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
      34:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
      38:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
      3c:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
      40:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
      44:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
      48:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
      4c:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
      50:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
      54:	8f 00       	.word	0x008f	; ????
      56:	97 00       	.word	0x0097	; ????
      58:	9f 00       	.word	0x009f	; ????
      5a:	a7 00       	.word	0x00a7	; ????
      5c:	af 00       	.word	0x00af	; ????
      5e:	b7 00       	.word	0x00b7	; ????
      60:	bf 00       	.word	0x00bf	; ????
      62:	c7 00       	.word	0x00c7	; ????
      64:	cf 00       	.word	0x00cf	; ????
      66:	d7 00       	.word	0x00d7	; ????
      68:	27 03       	mulsu	r18, r23
      6a:	2e 03       	fmul	r18, r22
      6c:	35 03       	mulsu	r19, r21
      6e:	3c 03       	fmul	r19, r20
      70:	43 03       	mulsu	r20, r19
      72:	4a 03       	fmul	r20, r18
      74:	51 03       	mulsu	r21, r17
      76:	58 03       	fmul	r21, r16

00000078 <__ctors_end>:
      78:	11 24       	eor	r1, r1
      7a:	1f be       	out	0x3f, r1	; 63
      7c:	cf e5       	ldi	r28, 0x5F	; 95
      7e:	d4 e0       	ldi	r29, 0x04	; 4
      80:	de bf       	out	0x3e, r29	; 62
      82:	cd bf       	out	0x3d, r28	; 61

00000084 <__do_copy_data>:
      84:	10 e0       	ldi	r17, 0x00	; 0
      86:	a0 e6       	ldi	r26, 0x60	; 96
      88:	b0 e0       	ldi	r27, 0x00	; 0
      8a:	e2 ec       	ldi	r30, 0xC2	; 194
      8c:	f4 e1       	ldi	r31, 0x14	; 20
      8e:	02 c0       	rjmp	.+4      	; 0x94 <__do_copy_data+0x10>
      90:	05 90       	lpm	r0, Z+
      92:	0d 92       	st	X+, r0
      94:	a4 36       	cpi	r26, 0x64	; 100
      96:	b1 07       	cpc	r27, r17
      98:	d9 f7       	brne	.-10     	; 0x90 <__do_copy_data+0xc>

0000009a <__do_clear_bss>:
      9a:	20 e0       	ldi	r18, 0x00	; 0
      9c:	a4 e6       	ldi	r26, 0x64	; 100
      9e:	b0 e0       	ldi	r27, 0x00	; 0
      a0:	01 c0       	rjmp	.+2      	; 0xa4 <.do_clear_bss_start>

000000a2 <.do_clear_bss_loop>:
      a2:	1d 92       	st	X+, r1

000000a4 <.do_clear_bss_start>:
      a4:	a5 39       	cpi	r26, 0x95	; 149
      a6:	b2 07       	cpc	r27, r18
      a8:	e1 f7       	brne	.-8      	; 0xa2 <.do_clear_bss_loop>
      aa:	0e 94 c7 02 	call	0x58e	; 0x58e <main>
      ae:	0c 94 5f 0a 	jmp	0x14be	; 0x14be <_exit>

000000b2 <__bad_interrupt>:
      b2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000b6 <fnPort_Init>:
void WDT_On(void) {
	/*
	Watchdog timer enables with typical timeout period 2.1 
	second.
	*/
	WDTCR = (1<<WDE)|(1<<WDP2)|(1<<WDP1)|(1<<WDP0);
      b6:	8b 9a       	sbi	0x11, 3	; 17
      b8:	8a 9a       	sbi	0x11, 2	; 17
      ba:	92 9a       	sbi	0x12, 2	; 18
      bc:	93 9a       	sbi	0x12, 3	; 18
      be:	b8 9a       	sbi	0x17, 0	; 23
      c0:	b9 9a       	sbi	0x17, 1	; 23
      c2:	ba 9a       	sbi	0x17, 2	; 23
      c4:	bb 9a       	sbi	0x17, 3	; 23
      c6:	bc 9a       	sbi	0x17, 4	; 23
      c8:	bd 9a       	sbi	0x17, 5	; 23
      ca:	be 9a       	sbi	0x17, 6	; 23
      cc:	c3 9a       	sbi	0x18, 3	; 24
      ce:	c4 9a       	sbi	0x18, 4	; 24
      d0:	c2 9a       	sbi	0x18, 2	; 24
      d2:	c0 9a       	sbi	0x18, 0	; 24
      d4:	c1 9a       	sbi	0x18, 1	; 24
      d6:	c5 9a       	sbi	0x18, 5	; 24
      d8:	c6 9a       	sbi	0x18, 6	; 24
      da:	d0 9a       	sbi	0x1a, 0	; 26
      dc:	d1 9a       	sbi	0x1a, 1	; 26
      de:	d2 9a       	sbi	0x1a, 2	; 26
      e0:	d3 9a       	sbi	0x1a, 3	; 26
      e2:	d4 9a       	sbi	0x1a, 4	; 26
      e4:	d5 9a       	sbi	0x1a, 5	; 26
      e6:	d8 9a       	sbi	0x1b, 0	; 27
      e8:	d9 9a       	sbi	0x1b, 1	; 27
      ea:	da 9a       	sbi	0x1b, 2	; 27
      ec:	db 9a       	sbi	0x1b, 3	; 27
      ee:	dc 9a       	sbi	0x1b, 4	; 27
      f0:	dd 9a       	sbi	0x1b, 5	; 27
      f2:	a2 98       	cbi	0x14, 2	; 20
      f4:	a3 98       	cbi	0x14, 3	; 20
      f6:	a4 98       	cbi	0x14, 4	; 20
      f8:	a5 98       	cbi	0x14, 5	; 20
      fa:	8f 98       	cbi	0x11, 7	; 17
      fc:	97 9a       	sbi	0x12, 7	; 18
      fe:	08 95       	ret

00000100 <fnAddressScan>:
     100:	83 b3       	in	r24, 0x13	; 19
     102:	86 95       	lsr	r24
     104:	86 95       	lsr	r24
     106:	8f 70       	andi	r24, 0x0F	; 15
     108:	08 95       	ret

0000010a <fnNumberofLED>:
     10a:	90 e0       	ldi	r25, 0x00	; 0
     10c:	8a 30       	cpi	r24, 0x0A	; 10
     10e:	91 05       	cpc	r25, r1
     110:	08 f0       	brcs	.+2      	; 0x114 <fnNumberofLED+0xa>
     112:	54 c0       	rjmp	.+168    	; 0x1bc <fnNumberofLED+0xb2>
     114:	fc 01       	movw	r30, r24
     116:	e6 5d       	subi	r30, 0xD6	; 214
     118:	ff 4f       	sbci	r31, 0xFF	; 255
     11a:	0c 94 22 0a 	jmp	0x1444	; 0x1444 <__tablejump2__>
     11e:	c3 98       	cbi	0x18, 3	; 24
     120:	c4 98       	cbi	0x18, 4	; 24
     122:	c2 98       	cbi	0x18, 2	; 24
     124:	c0 98       	cbi	0x18, 0	; 24
     126:	c1 98       	cbi	0x18, 1	; 24
     128:	c5 98       	cbi	0x18, 5	; 24
     12a:	c6 9a       	sbi	0x18, 6	; 24
     12c:	08 95       	ret
     12e:	c3 9a       	sbi	0x18, 3	; 24
     130:	c4 98       	cbi	0x18, 4	; 24
     132:	c2 98       	cbi	0x18, 2	; 24
     134:	c0 9a       	sbi	0x18, 0	; 24
     136:	c1 9a       	sbi	0x18, 1	; 24
     138:	c5 9a       	sbi	0x18, 5	; 24
     13a:	c6 9a       	sbi	0x18, 6	; 24
     13c:	08 95       	ret
     13e:	c3 98       	cbi	0x18, 3	; 24
     140:	c4 98       	cbi	0x18, 4	; 24
     142:	c2 9a       	sbi	0x18, 2	; 24
     144:	c0 98       	cbi	0x18, 0	; 24
     146:	c1 98       	cbi	0x18, 1	; 24
     148:	c5 9a       	sbi	0x18, 5	; 24
     14a:	c6 98       	cbi	0x18, 6	; 24
     14c:	08 95       	ret
     14e:	c3 98       	cbi	0x18, 3	; 24
     150:	c4 98       	cbi	0x18, 4	; 24
     152:	c2 98       	cbi	0x18, 2	; 24
     154:	c0 98       	cbi	0x18, 0	; 24
     156:	c1 9a       	sbi	0x18, 1	; 24
     158:	c5 9a       	sbi	0x18, 5	; 24
     15a:	c6 98       	cbi	0x18, 6	; 24
     15c:	08 95       	ret
     15e:	c3 9a       	sbi	0x18, 3	; 24
     160:	c4 98       	cbi	0x18, 4	; 24
     162:	c2 98       	cbi	0x18, 2	; 24
     164:	c0 9a       	sbi	0x18, 0	; 24
     166:	c1 9a       	sbi	0x18, 1	; 24
     168:	c5 98       	cbi	0x18, 5	; 24
     16a:	c6 98       	cbi	0x18, 6	; 24
     16c:	08 95       	ret
     16e:	c3 98       	cbi	0x18, 3	; 24
     170:	c4 9a       	sbi	0x18, 4	; 24
     172:	c2 98       	cbi	0x18, 2	; 24
     174:	c0 98       	cbi	0x18, 0	; 24
     176:	c1 9a       	sbi	0x18, 1	; 24
     178:	c5 98       	cbi	0x18, 5	; 24
     17a:	c6 98       	cbi	0x18, 6	; 24
     17c:	08 95       	ret
     17e:	c3 98       	cbi	0x18, 3	; 24
     180:	c4 9a       	sbi	0x18, 4	; 24
     182:	c2 98       	cbi	0x18, 2	; 24
     184:	c0 98       	cbi	0x18, 0	; 24
     186:	c1 98       	cbi	0x18, 1	; 24
     188:	c5 98       	cbi	0x18, 5	; 24
     18a:	c6 98       	cbi	0x18, 6	; 24
     18c:	08 95       	ret
     18e:	c3 98       	cbi	0x18, 3	; 24
     190:	c4 98       	cbi	0x18, 4	; 24
     192:	c2 98       	cbi	0x18, 2	; 24
     194:	c0 9a       	sbi	0x18, 0	; 24
     196:	c1 9a       	sbi	0x18, 1	; 24
     198:	c5 9a       	sbi	0x18, 5	; 24
     19a:	c6 9a       	sbi	0x18, 6	; 24
     19c:	08 95       	ret
     19e:	c3 98       	cbi	0x18, 3	; 24
     1a0:	c4 98       	cbi	0x18, 4	; 24
     1a2:	c2 98       	cbi	0x18, 2	; 24
     1a4:	c0 98       	cbi	0x18, 0	; 24
     1a6:	c1 98       	cbi	0x18, 1	; 24
     1a8:	c5 98       	cbi	0x18, 5	; 24
     1aa:	c6 98       	cbi	0x18, 6	; 24
     1ac:	08 95       	ret
     1ae:	c3 98       	cbi	0x18, 3	; 24
     1b0:	c4 98       	cbi	0x18, 4	; 24
     1b2:	c2 98       	cbi	0x18, 2	; 24
     1b4:	c0 98       	cbi	0x18, 0	; 24
     1b6:	c1 9a       	sbi	0x18, 1	; 24
     1b8:	c5 98       	cbi	0x18, 5	; 24
     1ba:	c6 98       	cbi	0x18, 6	; 24
     1bc:	08 95       	ret

000001be <fnScanLED>:
     1be:	cf 92       	push	r12
     1c0:	df 92       	push	r13
     1c2:	ff 92       	push	r15
     1c4:	0f 93       	push	r16
     1c6:	1f 93       	push	r17
     1c8:	cf 93       	push	r28
     1ca:	df 93       	push	r29
     1cc:	8c 01       	movw	r16, r24
     1ce:	eb 01       	movw	r28, r22
     1d0:	9c 01       	movw	r18, r24
     1d2:	ad ec       	ldi	r26, 0xCD	; 205
     1d4:	bc ec       	ldi	r27, 0xCC	; 204
     1d6:	0e 94 28 0a 	call	0x1450	; 0x1450 <__umulhisi3>
     1da:	96 95       	lsr	r25
     1dc:	87 95       	ror	r24
     1de:	96 95       	lsr	r25
     1e0:	87 95       	ror	r24
     1e2:	96 95       	lsr	r25
     1e4:	87 95       	ror	r24
     1e6:	9c 01       	movw	r18, r24
     1e8:	22 0f       	add	r18, r18
     1ea:	33 1f       	adc	r19, r19
     1ec:	88 0f       	add	r24, r24
     1ee:	99 1f       	adc	r25, r25
     1f0:	88 0f       	add	r24, r24
     1f2:	99 1f       	adc	r25, r25
     1f4:	88 0f       	add	r24, r24
     1f6:	99 1f       	adc	r25, r25
     1f8:	82 0f       	add	r24, r18
     1fa:	93 1f       	adc	r25, r19
     1fc:	20 2f       	mov	r18, r16
     1fe:	28 1b       	sub	r18, r24
     200:	82 2f       	mov	r24, r18
     202:	0e 94 85 00 	call	0x10a	; 0x10a <fnNumberofLED>
     206:	d8 98       	cbi	0x1b, 0	; 27
     208:	84 e1       	ldi	r24, 0x14	; 20
     20a:	91 e0       	ldi	r25, 0x01	; 1
     20c:	01 97       	sbiw	r24, 0x01	; 1
     20e:	f1 f7       	brne	.-4      	; 0x20c <fnScanLED+0x4e>
     210:	00 00       	nop
     212:	d8 9a       	sbi	0x1b, 0	; 27
     214:	68 01       	movw	r12, r16
     216:	d6 94       	lsr	r13
     218:	c7 94       	ror	r12
     21a:	d6 94       	lsr	r13
     21c:	c7 94       	ror	r12
     21e:	96 01       	movw	r18, r12
     220:	ab e7       	ldi	r26, 0x7B	; 123
     222:	b4 e1       	ldi	r27, 0x14	; 20
     224:	0e 94 28 0a 	call	0x1450	; 0x1450 <__umulhisi3>
     228:	96 95       	lsr	r25
     22a:	87 95       	ror	r24
     22c:	0f 2e       	mov	r0, r31
     22e:	f4 e6       	ldi	r31, 0x64	; 100
     230:	ff 2e       	mov	r15, r31
     232:	f0 2d       	mov	r31, r0
     234:	f8 9e       	mul	r15, r24
     236:	90 01       	movw	r18, r0
     238:	f9 9e       	mul	r15, r25
     23a:	30 0d       	add	r19, r0
     23c:	11 24       	eor	r1, r1
     23e:	c8 01       	movw	r24, r16
     240:	82 1b       	sub	r24, r18
     242:	93 0b       	sbc	r25, r19
     244:	9c 01       	movw	r18, r24
     246:	ad ec       	ldi	r26, 0xCD	; 205
     248:	bc ec       	ldi	r27, 0xCC	; 204
     24a:	0e 94 28 0a 	call	0x1450	; 0x1450 <__umulhisi3>
     24e:	96 95       	lsr	r25
     250:	87 95       	ror	r24
     252:	96 95       	lsr	r25
     254:	87 95       	ror	r24
     256:	96 95       	lsr	r25
     258:	87 95       	ror	r24
     25a:	0e 94 85 00 	call	0x10a	; 0x10a <fnNumberofLED>
     25e:	d9 98       	cbi	0x1b, 1	; 27
     260:	84 e1       	ldi	r24, 0x14	; 20
     262:	91 e0       	ldi	r25, 0x01	; 1
     264:	01 97       	sbiw	r24, 0x01	; 1
     266:	f1 f7       	brne	.-4      	; 0x264 <fnScanLED+0xa6>
     268:	00 00       	nop
     26a:	d9 9a       	sbi	0x1b, 1	; 27
     26c:	96 01       	movw	r18, r12
     26e:	ab e7       	ldi	r26, 0x7B	; 123
     270:	b4 e1       	ldi	r27, 0x14	; 20
     272:	0e 94 28 0a 	call	0x1450	; 0x1450 <__umulhisi3>
     276:	96 95       	lsr	r25
     278:	87 95       	ror	r24
     27a:	0e 94 85 00 	call	0x10a	; 0x10a <fnNumberofLED>
     27e:	da 98       	cbi	0x1b, 2	; 27
     280:	84 e1       	ldi	r24, 0x14	; 20
     282:	91 e0       	ldi	r25, 0x01	; 1
     284:	01 97       	sbiw	r24, 0x01	; 1
     286:	f1 f7       	brne	.-4      	; 0x284 <fnScanLED+0xc6>
     288:	00 00       	nop
     28a:	da 9a       	sbi	0x1b, 2	; 27
     28c:	9e 01       	movw	r18, r28
     28e:	ad ec       	ldi	r26, 0xCD	; 205
     290:	bc ec       	ldi	r27, 0xCC	; 204
     292:	0e 94 28 0a 	call	0x1450	; 0x1450 <__umulhisi3>
     296:	96 95       	lsr	r25
     298:	87 95       	ror	r24
     29a:	96 95       	lsr	r25
     29c:	87 95       	ror	r24
     29e:	96 95       	lsr	r25
     2a0:	87 95       	ror	r24
     2a2:	9c 01       	movw	r18, r24
     2a4:	22 0f       	add	r18, r18
     2a6:	33 1f       	adc	r19, r19
     2a8:	88 0f       	add	r24, r24
     2aa:	99 1f       	adc	r25, r25
     2ac:	88 0f       	add	r24, r24
     2ae:	99 1f       	adc	r25, r25
     2b0:	88 0f       	add	r24, r24
     2b2:	99 1f       	adc	r25, r25
     2b4:	82 0f       	add	r24, r18
     2b6:	93 1f       	adc	r25, r19
     2b8:	2c 2f       	mov	r18, r28
     2ba:	28 1b       	sub	r18, r24
     2bc:	82 2f       	mov	r24, r18
     2be:	0e 94 85 00 	call	0x10a	; 0x10a <fnNumberofLED>
     2c2:	db 98       	cbi	0x1b, 3	; 27
     2c4:	84 e1       	ldi	r24, 0x14	; 20
     2c6:	91 e0       	ldi	r25, 0x01	; 1
     2c8:	01 97       	sbiw	r24, 0x01	; 1
     2ca:	f1 f7       	brne	.-4      	; 0x2c8 <fnScanLED+0x10a>
     2cc:	00 00       	nop
     2ce:	db 9a       	sbi	0x1b, 3	; 27
     2d0:	8e 01       	movw	r16, r28
     2d2:	16 95       	lsr	r17
     2d4:	07 95       	ror	r16
     2d6:	16 95       	lsr	r17
     2d8:	07 95       	ror	r16
     2da:	98 01       	movw	r18, r16
     2dc:	ab e7       	ldi	r26, 0x7B	; 123
     2de:	b4 e1       	ldi	r27, 0x14	; 20
     2e0:	0e 94 28 0a 	call	0x1450	; 0x1450 <__umulhisi3>
     2e4:	96 95       	lsr	r25
     2e6:	87 95       	ror	r24
     2e8:	f8 9e       	mul	r15, r24
     2ea:	90 01       	movw	r18, r0
     2ec:	f9 9e       	mul	r15, r25
     2ee:	30 0d       	add	r19, r0
     2f0:	11 24       	eor	r1, r1
     2f2:	ce 01       	movw	r24, r28
     2f4:	82 1b       	sub	r24, r18
     2f6:	93 0b       	sbc	r25, r19
     2f8:	9c 01       	movw	r18, r24
     2fa:	ad ec       	ldi	r26, 0xCD	; 205
     2fc:	bc ec       	ldi	r27, 0xCC	; 204
     2fe:	0e 94 28 0a 	call	0x1450	; 0x1450 <__umulhisi3>
     302:	96 95       	lsr	r25
     304:	87 95       	ror	r24
     306:	96 95       	lsr	r25
     308:	87 95       	ror	r24
     30a:	96 95       	lsr	r25
     30c:	87 95       	ror	r24
     30e:	0e 94 85 00 	call	0x10a	; 0x10a <fnNumberofLED>
     312:	dc 98       	cbi	0x1b, 4	; 27
     314:	84 e1       	ldi	r24, 0x14	; 20
     316:	91 e0       	ldi	r25, 0x01	; 1
     318:	01 97       	sbiw	r24, 0x01	; 1
     31a:	f1 f7       	brne	.-4      	; 0x318 <fnScanLED+0x15a>
     31c:	00 00       	nop
     31e:	dc 9a       	sbi	0x1b, 4	; 27
     320:	98 01       	movw	r18, r16
     322:	ab e7       	ldi	r26, 0x7B	; 123
     324:	b4 e1       	ldi	r27, 0x14	; 20
     326:	0e 94 28 0a 	call	0x1450	; 0x1450 <__umulhisi3>
     32a:	96 95       	lsr	r25
     32c:	87 95       	ror	r24
     32e:	0e 94 85 00 	call	0x10a	; 0x10a <fnNumberofLED>
     332:	dd 98       	cbi	0x1b, 5	; 27
     334:	84 e1       	ldi	r24, 0x14	; 20
     336:	91 e0       	ldi	r25, 0x01	; 1
     338:	01 97       	sbiw	r24, 0x01	; 1
     33a:	f1 f7       	brne	.-4      	; 0x338 <fnScanLED+0x17a>
     33c:	00 00       	nop
     33e:	dd 9a       	sbi	0x1b, 5	; 27
     340:	df 91       	pop	r29
     342:	cf 91       	pop	r28
     344:	1f 91       	pop	r17
     346:	0f 91       	pop	r16
     348:	ff 90       	pop	r15
     34a:	df 90       	pop	r13
     34c:	cf 90       	pop	r12
     34e:	08 95       	ret

00000350 <fnScanLED_SetBaud>:
     350:	c3 9a       	sbi	0x18, 3	; 24
     352:	c4 9a       	sbi	0x18, 4	; 24
     354:	c2 9a       	sbi	0x18, 2	; 24
     356:	c0 98       	cbi	0x18, 0	; 24
     358:	c1 98       	cbi	0x18, 1	; 24
     35a:	c5 98       	cbi	0x18, 5	; 24
     35c:	c6 98       	cbi	0x18, 6	; 24
     35e:	d8 98       	cbi	0x1b, 0	; 27
     360:	84 e1       	ldi	r24, 0x14	; 20
     362:	91 e0       	ldi	r25, 0x01	; 1
     364:	01 97       	sbiw	r24, 0x01	; 1
     366:	f1 f7       	brne	.-4      	; 0x364 <fnScanLED_SetBaud+0x14>
     368:	00 00       	nop
     36a:	d8 9a       	sbi	0x1b, 0	; 27
     36c:	c3 98       	cbi	0x18, 3	; 24
     36e:	c4 9a       	sbi	0x18, 4	; 24
     370:	c2 9a       	sbi	0x18, 2	; 24
     372:	c0 98       	cbi	0x18, 0	; 24
     374:	c1 98       	cbi	0x18, 1	; 24
     376:	c5 98       	cbi	0x18, 5	; 24
     378:	c6 98       	cbi	0x18, 6	; 24
     37a:	d9 98       	cbi	0x1b, 1	; 27
     37c:	84 e1       	ldi	r24, 0x14	; 20
     37e:	91 e0       	ldi	r25, 0x01	; 1
     380:	01 97       	sbiw	r24, 0x01	; 1
     382:	f1 f7       	brne	.-4      	; 0x380 <fnScanLED_SetBaud+0x30>
     384:	00 00       	nop
     386:	d9 9a       	sbi	0x1b, 1	; 27
     388:	c3 98       	cbi	0x18, 3	; 24
     38a:	c4 9a       	sbi	0x18, 4	; 24
     38c:	c2 98       	cbi	0x18, 2	; 24
     38e:	c0 98       	cbi	0x18, 0	; 24
     390:	c1 9a       	sbi	0x18, 1	; 24
     392:	c5 98       	cbi	0x18, 5	; 24
     394:	c6 98       	cbi	0x18, 6	; 24
     396:	da 98       	cbi	0x1b, 2	; 27
     398:	84 e1       	ldi	r24, 0x14	; 20
     39a:	91 e0       	ldi	r25, 0x01	; 1
     39c:	01 97       	sbiw	r24, 0x01	; 1
     39e:	f1 f7       	brne	.-4      	; 0x39c <fnScanLED_SetBaud+0x4c>
     3a0:	00 00       	nop
     3a2:	da 9a       	sbi	0x1b, 2	; 27
     3a4:	c3 9a       	sbi	0x18, 3	; 24
     3a6:	c4 9a       	sbi	0x18, 4	; 24
     3a8:	c2 98       	cbi	0x18, 2	; 24
     3aa:	c0 98       	cbi	0x18, 0	; 24
     3ac:	c1 98       	cbi	0x18, 1	; 24
     3ae:	c5 9a       	sbi	0x18, 5	; 24
     3b0:	c6 9a       	sbi	0x18, 6	; 24
     3b2:	db 98       	cbi	0x1b, 3	; 27
     3b4:	84 e1       	ldi	r24, 0x14	; 20
     3b6:	91 e0       	ldi	r25, 0x01	; 1
     3b8:	01 97       	sbiw	r24, 0x01	; 1
     3ba:	f1 f7       	brne	.-4      	; 0x3b8 <fnScanLED_SetBaud+0x68>
     3bc:	00 00       	nop
     3be:	db 9a       	sbi	0x1b, 3	; 27
     3c0:	c3 98       	cbi	0x18, 3	; 24
     3c2:	c4 98       	cbi	0x18, 4	; 24
     3c4:	c2 98       	cbi	0x18, 2	; 24
     3c6:	c0 9a       	sbi	0x18, 0	; 24
     3c8:	c1 98       	cbi	0x18, 1	; 24
     3ca:	c5 98       	cbi	0x18, 5	; 24
     3cc:	c6 98       	cbi	0x18, 6	; 24
     3ce:	dc 98       	cbi	0x1b, 4	; 27
     3d0:	84 e1       	ldi	r24, 0x14	; 20
     3d2:	91 e0       	ldi	r25, 0x01	; 1
     3d4:	01 97       	sbiw	r24, 0x01	; 1
     3d6:	f1 f7       	brne	.-4      	; 0x3d4 <fnScanLED_SetBaud+0x84>
     3d8:	00 00       	nop
     3da:	dc 9a       	sbi	0x1b, 4	; 27
     3dc:	c3 9a       	sbi	0x18, 3	; 24
     3de:	c4 9a       	sbi	0x18, 4	; 24
     3e0:	c2 98       	cbi	0x18, 2	; 24
     3e2:	c0 98       	cbi	0x18, 0	; 24
     3e4:	c1 98       	cbi	0x18, 1	; 24
     3e6:	c5 98       	cbi	0x18, 5	; 24
     3e8:	c6 98       	cbi	0x18, 6	; 24
     3ea:	dd 98       	cbi	0x1b, 5	; 27
     3ec:	84 e1       	ldi	r24, 0x14	; 20
     3ee:	91 e0       	ldi	r25, 0x01	; 1
     3f0:	01 97       	sbiw	r24, 0x01	; 1
     3f2:	f1 f7       	brne	.-4      	; 0x3f0 <fnScanLED_SetBaud+0xa0>
     3f4:	00 00       	nop
     3f6:	dd 9a       	sbi	0x1b, 5	; 27
     3f8:	08 95       	ret

000003fa <fnScanLED_Baud>:
     3fa:	cf 93       	push	r28
     3fc:	df 93       	push	r29
     3fe:	ec 01       	movw	r28, r24
     400:	9c 01       	movw	r18, r24
     402:	36 95       	lsr	r19
     404:	27 95       	ror	r18
     406:	36 95       	lsr	r19
     408:	27 95       	ror	r18
     40a:	ab e7       	ldi	r26, 0x7B	; 123
     40c:	b4 e1       	ldi	r27, 0x14	; 20
     40e:	0e 94 28 0a 	call	0x1450	; 0x1450 <__umulhisi3>
     412:	96 95       	lsr	r25
     414:	87 95       	ror	r24
     416:	44 e6       	ldi	r20, 0x64	; 100
     418:	48 9f       	mul	r20, r24
     41a:	90 01       	movw	r18, r0
     41c:	49 9f       	mul	r20, r25
     41e:	30 0d       	add	r19, r0
     420:	11 24       	eor	r1, r1
     422:	ce 01       	movw	r24, r28
     424:	82 1b       	sub	r24, r18
     426:	93 0b       	sbc	r25, r19
     428:	9c 01       	movw	r18, r24
     42a:	ad ec       	ldi	r26, 0xCD	; 205
     42c:	bc ec       	ldi	r27, 0xCC	; 204
     42e:	0e 94 28 0a 	call	0x1450	; 0x1450 <__umulhisi3>
     432:	96 95       	lsr	r25
     434:	87 95       	ror	r24
     436:	96 95       	lsr	r25
     438:	87 95       	ror	r24
     43a:	96 95       	lsr	r25
     43c:	87 95       	ror	r24
     43e:	0e 94 85 00 	call	0x10a	; 0x10a <fnNumberofLED>
     442:	d8 98       	cbi	0x1b, 0	; 27
     444:	98 eb       	ldi	r25, 0xB8	; 184
     446:	9a 95       	dec	r25
     448:	f1 f7       	brne	.-4      	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
     44a:	00 00       	nop
     44c:	d8 9a       	sbi	0x1b, 0	; 27
     44e:	9e 01       	movw	r18, r28
     450:	36 95       	lsr	r19
     452:	27 95       	ror	r18
     454:	36 95       	lsr	r19
     456:	27 95       	ror	r18
     458:	36 95       	lsr	r19
     45a:	27 95       	ror	r18
     45c:	a5 ec       	ldi	r26, 0xC5	; 197
     45e:	b0 e2       	ldi	r27, 0x20	; 32
     460:	0e 94 28 0a 	call	0x1450	; 0x1450 <__umulhisi3>
     464:	92 95       	swap	r25
     466:	82 95       	swap	r24
     468:	8f 70       	andi	r24, 0x0F	; 15
     46a:	89 27       	eor	r24, r25
     46c:	9f 70       	andi	r25, 0x0F	; 15
     46e:	89 27       	eor	r24, r25
     470:	48 ee       	ldi	r20, 0xE8	; 232
     472:	53 e0       	ldi	r21, 0x03	; 3
     474:	84 9f       	mul	r24, r20
     476:	90 01       	movw	r18, r0
     478:	85 9f       	mul	r24, r21
     47a:	30 0d       	add	r19, r0
     47c:	94 9f       	mul	r25, r20
     47e:	30 0d       	add	r19, r0
     480:	11 24       	eor	r1, r1
     482:	ce 01       	movw	r24, r28
     484:	82 1b       	sub	r24, r18
     486:	93 0b       	sbc	r25, r19
     488:	9c 01       	movw	r18, r24
     48a:	36 95       	lsr	r19
     48c:	27 95       	ror	r18
     48e:	36 95       	lsr	r19
     490:	27 95       	ror	r18
     492:	ab e7       	ldi	r26, 0x7B	; 123
     494:	b4 e1       	ldi	r27, 0x14	; 20
     496:	0e 94 28 0a 	call	0x1450	; 0x1450 <__umulhisi3>
     49a:	96 95       	lsr	r25
     49c:	87 95       	ror	r24
     49e:	0e 94 85 00 	call	0x10a	; 0x10a <fnNumberofLED>
     4a2:	d9 98       	cbi	0x1b, 1	; 27
     4a4:	98 eb       	ldi	r25, 0xB8	; 184
     4a6:	9a 95       	dec	r25
     4a8:	f1 f7       	brne	.-4      	; 0x4a6 <__stack+0x47>
     4aa:	00 00       	nop
     4ac:	d9 9a       	sbi	0x1b, 1	; 27
     4ae:	9e 01       	movw	r18, r28
     4b0:	32 95       	swap	r19
     4b2:	22 95       	swap	r18
     4b4:	2f 70       	andi	r18, 0x0F	; 15
     4b6:	23 27       	eor	r18, r19
     4b8:	3f 70       	andi	r19, 0x0F	; 15
     4ba:	23 27       	eor	r18, r19
     4bc:	a7 e4       	ldi	r26, 0x47	; 71
     4be:	b3 e0       	ldi	r27, 0x03	; 3
     4c0:	0e 94 28 0a 	call	0x1450	; 0x1450 <__umulhisi3>
     4c4:	96 95       	lsr	r25
     4c6:	87 95       	ror	r24
     4c8:	96 95       	lsr	r25
     4ca:	87 95       	ror	r24
     4cc:	96 95       	lsr	r25
     4ce:	87 95       	ror	r24
     4d0:	40 e1       	ldi	r20, 0x10	; 16
     4d2:	57 e2       	ldi	r21, 0x27	; 39
     4d4:	84 9f       	mul	r24, r20
     4d6:	90 01       	movw	r18, r0
     4d8:	85 9f       	mul	r24, r21
     4da:	30 0d       	add	r19, r0
     4dc:	94 9f       	mul	r25, r20
     4de:	30 0d       	add	r19, r0
     4e0:	11 24       	eor	r1, r1
     4e2:	ce 01       	movw	r24, r28
     4e4:	82 1b       	sub	r24, r18
     4e6:	93 0b       	sbc	r25, r19
     4e8:	9c 01       	movw	r18, r24
     4ea:	36 95       	lsr	r19
     4ec:	27 95       	ror	r18
     4ee:	36 95       	lsr	r19
     4f0:	27 95       	ror	r18
     4f2:	36 95       	lsr	r19
     4f4:	27 95       	ror	r18
     4f6:	a5 ec       	ldi	r26, 0xC5	; 197
     4f8:	b0 e2       	ldi	r27, 0x20	; 32
     4fa:	0e 94 28 0a 	call	0x1450	; 0x1450 <__umulhisi3>
     4fe:	92 95       	swap	r25
     500:	82 95       	swap	r24
     502:	8f 70       	andi	r24, 0x0F	; 15
     504:	89 27       	eor	r24, r25
     506:	9f 70       	andi	r25, 0x0F	; 15
     508:	89 27       	eor	r24, r25
     50a:	0e 94 85 00 	call	0x10a	; 0x10a <fnNumberofLED>
     50e:	da 98       	cbi	0x1b, 2	; 27
     510:	98 eb       	ldi	r25, 0xB8	; 184
     512:	9a 95       	dec	r25
     514:	f1 f7       	brne	.-4      	; 0x512 <__stack+0xb3>
     516:	00 00       	nop
     518:	da 9a       	sbi	0x1b, 2	; 27
     51a:	80 e0       	ldi	r24, 0x00	; 0
     51c:	0e 94 85 00 	call	0x10a	; 0x10a <fnNumberofLED>
     520:	db 98       	cbi	0x1b, 3	; 27
     522:	28 eb       	ldi	r18, 0xB8	; 184
     524:	2a 95       	dec	r18
     526:	f1 f7       	brne	.-4      	; 0x524 <__stack+0xc5>
     528:	00 00       	nop
     52a:	db 9a       	sbi	0x1b, 3	; 27
     52c:	80 e0       	ldi	r24, 0x00	; 0
     52e:	0e 94 85 00 	call	0x10a	; 0x10a <fnNumberofLED>
     532:	dc 98       	cbi	0x1b, 4	; 27
     534:	88 eb       	ldi	r24, 0xB8	; 184
     536:	8a 95       	dec	r24
     538:	f1 f7       	brne	.-4      	; 0x536 <__stack+0xd7>
     53a:	00 00       	nop
     53c:	dc 9a       	sbi	0x1b, 4	; 27
     53e:	9e 01       	movw	r18, r28
     540:	ad ec       	ldi	r26, 0xCD	; 205
     542:	bc ec       	ldi	r27, 0xCC	; 204
     544:	0e 94 28 0a 	call	0x1450	; 0x1450 <__umulhisi3>
     548:	96 95       	lsr	r25
     54a:	87 95       	ror	r24
     54c:	96 95       	lsr	r25
     54e:	87 95       	ror	r24
     550:	96 95       	lsr	r25
     552:	87 95       	ror	r24
     554:	9c 01       	movw	r18, r24
     556:	22 0f       	add	r18, r18
     558:	33 1f       	adc	r19, r19
     55a:	88 0f       	add	r24, r24
     55c:	99 1f       	adc	r25, r25
     55e:	88 0f       	add	r24, r24
     560:	99 1f       	adc	r25, r25
     562:	88 0f       	add	r24, r24
     564:	99 1f       	adc	r25, r25
     566:	82 0f       	add	r24, r18
     568:	93 1f       	adc	r25, r19
     56a:	2c 2f       	mov	r18, r28
     56c:	28 1b       	sub	r18, r24
     56e:	82 2f       	mov	r24, r18
     570:	0e 94 85 00 	call	0x10a	; 0x10a <fnNumberofLED>
     574:	dd 98       	cbi	0x1b, 5	; 27
     576:	88 eb       	ldi	r24, 0xB8	; 184
     578:	8a 95       	dec	r24
     57a:	f1 f7       	brne	.-4      	; 0x578 <__stack+0x119>
     57c:	00 00       	nop
     57e:	dd 9a       	sbi	0x1b, 5	; 27
     580:	df 91       	pop	r29
     582:	cf 91       	pop	r28
     584:	08 95       	ret

00000586 <WDT_Off>:

void WDT_Off(void) {
	/*
	This function use for disable the watchdog timer.
	*/
	WDTCR = (1<<WDTOE)|(1<<WDE);
     586:	88 e1       	ldi	r24, 0x18	; 24
     588:	81 bd       	out	0x21, r24	; 33
	WDTCR = 0x00;
     58a:	11 bc       	out	0x21, r1	; 33
     58c:	08 95       	ret

0000058e <main>:
}

int main(void) {
	if (eeprom_rw(ADDR) == 0xFFFF) {
     58e:	8b e0       	ldi	r24, 0x0B	; 11
     590:	90 e0       	ldi	r25, 0x00	; 0
     592:	0e 94 37 0a 	call	0x146e	; 0x146e <eeprom_read_word>
     596:	01 96       	adiw	r24, 0x01	; 1
     598:	31 f4       	brne	.+12     	; 0x5a6 <main+0x18>
		eeprom_ww(ADDR, 0x60);
     59a:	60 e6       	ldi	r22, 0x60	; 96
     59c:	70 e0       	ldi	r23, 0x00	; 0
     59e:	8b e0       	ldi	r24, 0x0B	; 11
     5a0:	90 e0       	ldi	r25, 0x00	; 0
     5a2:	0e 94 3d 0a 	call	0x147a	; 0x147a <eeprom_write_word>
	}
	vrui_baudrate = eeprom_rw(ADDR);
     5a6:	8b e0       	ldi	r24, 0x0B	; 11
     5a8:	90 e0       	ldi	r25, 0x00	; 0
     5aa:	0e 94 37 0a 	call	0x146e	; 0x146e <eeprom_read_word>
     5ae:	9c 01       	movw	r18, r24
     5b0:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
     5b4:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
	vruli_baudrate = vrui_baudrate*100;
     5b8:	44 e6       	ldi	r20, 0x64	; 100
     5ba:	42 9f       	mul	r20, r18
     5bc:	c0 01       	movw	r24, r0
     5be:	43 9f       	mul	r20, r19
     5c0:	90 0d       	add	r25, r0
     5c2:	11 24       	eor	r1, r1
     5c4:	a0 e0       	ldi	r26, 0x00	; 0
     5c6:	b0 e0       	ldi	r27, 0x00	; 0
     5c8:	80 93 8c 00 	sts	0x008C, r24	; 0x80008c <vruli_baudrate>
     5cc:	90 93 8d 00 	sts	0x008D, r25	; 0x80008d <vruli_baudrate+0x1>
     5d0:	a0 93 8e 00 	sts	0x008E, r26	; 0x80008e <vruli_baudrate+0x2>
     5d4:	b0 93 8f 00 	sts	0x008F, r27	; 0x80008f <vruli_baudrate+0x3>
	fnPort_Init();
     5d8:	0e 94 5b 00 	call	0xb6	; 0xb6 <fnPort_Init>
	timer2_Init(PRESCALING_64_TIMER2);
     5dc:	84 e0       	ldi	r24, 0x04	; 4
     5de:	0e 94 5c 07 	call	0xeb8	; 0xeb8 <timer2_Init>
	timer2_Enable();
     5e2:	0e 94 6c 07 	call	0xed8	; 0xed8 <timer2_Enable>
    sei();
     5e6:	78 94       	sei
	vruc_modbus_address = fnAddressScan();
     5e8:	0e 94 80 00 	call	0x100	; 0x100 <fnAddressScan>
     5ec:	80 93 63 00 	sts	0x0063, r24	; 0x800063 <vruc_modbus_address>
	if (((PIND>>7) & 0x01) == 0) {
     5f0:	87 99       	sbic	0x10, 7	; 16
     5f2:	04 c0       	rjmp	.+8      	; 0x5fc <main+0x6e>
		vruc_modbus_address += 15;
     5f4:	81 5f       	subi	r24, 0xF1	; 241
     5f6:	80 93 63 00 	sts	0x0063, r24	; 0x800063 <vruc_modbus_address>
     5fa:	75 c0       	rjmp	.+234    	; 0x6e6 <main+0x158>
	}
	else {
	    if (vruc_modbus_address == 0) {
     5fc:	81 11       	cpse	r24, r1
     5fe:	73 c0       	rjmp	.+230    	; 0x6e6 <main+0x158>
			vruc_blinkled_flag = 1;
     600:	81 e0       	ldi	r24, 0x01	; 1
     602:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <__data_end>
			while(vruc_modbus_address != vruc_modbus_oldaddress || vruc_modbus_address > 8 || vruc_modbus_address == 0) {
     606:	0f c0       	rjmp	.+30     	; 0x626 <main+0x98>
				vruc_modbus_oldaddress = vruc_modbus_address;
     608:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <vruc_modbus_oldaddress>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     60c:	8f ef       	ldi	r24, 0xFF	; 255
     60e:	9f e7       	ldi	r25, 0x7F	; 127
     610:	23 e4       	ldi	r18, 0x43	; 67
     612:	81 50       	subi	r24, 0x01	; 1
     614:	90 40       	sbci	r25, 0x00	; 0
     616:	20 40       	sbci	r18, 0x00	; 0
     618:	e1 f7       	brne	.-8      	; 0x612 <main+0x84>
     61a:	00 c0       	rjmp	.+0      	; 0x61c <main+0x8e>
     61c:	00 00       	nop
				_delay_ms(2000);
				vruc_modbus_address = fnAddressScan();
     61e:	0e 94 80 00 	call	0x100	; 0x100 <fnAddressScan>
     622:	80 93 63 00 	sts	0x0063, r24	; 0x800063 <vruc_modbus_address>
		vruc_modbus_address += 15;
	}
	else {
	    if (vruc_modbus_address == 0) {
			vruc_blinkled_flag = 1;
			while(vruc_modbus_address != vruc_modbus_oldaddress || vruc_modbus_address > 8 || vruc_modbus_address == 0) {
     626:	80 91 63 00 	lds	r24, 0x0063	; 0x800063 <vruc_modbus_address>
     62a:	90 91 62 00 	lds	r25, 0x0062	; 0x800062 <vruc_modbus_oldaddress>
     62e:	89 13       	cpse	r24, r25
     630:	eb cf       	rjmp	.-42     	; 0x608 <main+0x7a>
     632:	9f ef       	ldi	r25, 0xFF	; 255
     634:	98 0f       	add	r25, r24
     636:	98 30       	cpi	r25, 0x08	; 8
     638:	38 f7       	brcc	.-50     	; 0x608 <main+0x7a>
				vruc_modbus_oldaddress = vruc_modbus_address;
				_delay_ms(2000);
				vruc_modbus_address = fnAddressScan();
			}
			switch (vruc_modbus_address) {
     63a:	90 e0       	ldi	r25, 0x00	; 0
     63c:	fc 01       	movw	r30, r24
     63e:	31 97       	sbiw	r30, 0x01	; 1
     640:	e8 30       	cpi	r30, 0x08	; 8
     642:	f1 05       	cpc	r31, r1
     644:	d8 f5       	brcc	.+118    	; 0x6bc <main+0x12e>
     646:	ec 5c       	subi	r30, 0xCC	; 204
     648:	ff 4f       	sbci	r31, 0xFF	; 255
     64a:	0c 94 22 0a 	jmp	0x1444	; 0x1444 <__tablejump2__>
				case 1:
				    vrui_baudrate = 12;
     64e:	8c e0       	ldi	r24, 0x0C	; 12
     650:	90 e0       	ldi	r25, 0x00	; 0
     652:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
     656:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
				    break;
     65a:	30 c0       	rjmp	.+96     	; 0x6bc <main+0x12e>
				case 2:
				    vrui_baudrate = 24;
     65c:	88 e1       	ldi	r24, 0x18	; 24
     65e:	90 e0       	ldi	r25, 0x00	; 0
     660:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
     664:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
				    break;
     668:	29 c0       	rjmp	.+82     	; 0x6bc <main+0x12e>
				case 3:
				    vrui_baudrate = 48;
     66a:	80 e3       	ldi	r24, 0x30	; 48
     66c:	90 e0       	ldi	r25, 0x00	; 0
     66e:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
     672:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
				    break;
     676:	22 c0       	rjmp	.+68     	; 0x6bc <main+0x12e>
				case 4:
				    vrui_baudrate = 96;
     678:	80 e6       	ldi	r24, 0x60	; 96
     67a:	90 e0       	ldi	r25, 0x00	; 0
     67c:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
     680:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
				    break;				
     684:	1b c0       	rjmp	.+54     	; 0x6bc <main+0x12e>
				case 5:
				    vrui_baudrate = 192;
     686:	80 ec       	ldi	r24, 0xC0	; 192
     688:	90 e0       	ldi	r25, 0x00	; 0
     68a:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
     68e:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
				    break;		
     692:	14 c0       	rjmp	.+40     	; 0x6bc <main+0x12e>
				case 6:
				    vrui_baudrate = 384;
     694:	80 e8       	ldi	r24, 0x80	; 128
     696:	91 e0       	ldi	r25, 0x01	; 1
     698:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
     69c:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
				    break;				
     6a0:	0d c0       	rjmp	.+26     	; 0x6bc <main+0x12e>
				case 7:
				    vrui_baudrate = 576;
     6a2:	80 e4       	ldi	r24, 0x40	; 64
     6a4:	92 e0       	ldi	r25, 0x02	; 2
     6a6:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
     6aa:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
				    break;				
     6ae:	06 c0       	rjmp	.+12     	; 0x6bc <main+0x12e>
				case 8:
				    vrui_baudrate = 1152;
     6b0:	80 e8       	ldi	r24, 0x80	; 128
     6b2:	94 e0       	ldi	r25, 0x04	; 4
     6b4:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
     6b8:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
				    break;						
			}
			eeprom_ww(ADDR, vrui_baudrate);
     6bc:	60 91 60 00 	lds	r22, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
     6c0:	70 91 61 00 	lds	r23, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
     6c4:	8b e0       	ldi	r24, 0x0B	; 11
     6c6:	90 e0       	ldi	r25, 0x00	; 0
     6c8:	0e 94 3d 0a 	call	0x147a	; 0x147a <eeprom_write_word>
			vruc_blinkled_flag = 2;
     6cc:	82 e0       	ldi	r24, 0x02	; 2
     6ce:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <__data_end>
			timer2_Disable();
     6d2:	0e 94 68 07 	call	0xed0	; 0xed0 <timer2_Disable>
			clr_PD3;
     6d6:	93 98       	cbi	0x12, 3	; 18
			while(1) {
				fnScanLED_Baud(vrui_baudrate);
     6d8:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
     6dc:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
     6e0:	0e 94 fd 01 	call	0x3fa	; 0x3fa <fnScanLED_Baud>
     6e4:	f9 cf       	rjmp	.-14     	; 0x6d8 <main+0x14a>
			}
		} 	
	}
	sei();
     6e6:	78 94       	sei
    SHT31_Init(10000);
     6e8:	60 e1       	ldi	r22, 0x10	; 16
     6ea:	77 e2       	ldi	r23, 0x27	; 39
     6ec:	80 e0       	ldi	r24, 0x00	; 0
     6ee:	90 e0       	ldi	r25, 0x00	; 0
     6f0:	0e 94 cd 06 	call	0xd9a	; 0xd9a <SHT31_Init>
	UART_Init(vruli_baudrate);
     6f4:	60 91 8c 00 	lds	r22, 0x008C	; 0x80008c <vruli_baudrate>
     6f8:	70 91 8d 00 	lds	r23, 0x008D	; 0x80008d <vruli_baudrate+0x1>
     6fc:	80 91 8e 00 	lds	r24, 0x008E	; 0x80008e <vruli_baudrate+0x2>
     700:	90 91 8f 00 	lds	r25, 0x008F	; 0x80008f <vruli_baudrate+0x3>
     704:	0e 94 eb 07 	call	0xfd6	; 0xfd6 <UART_Init>
    SHT31_Soft_Reset();
     708:	0e 94 d0 06 	call	0xda0	; 0xda0 <SHT31_Soft_Reset>
	clr_PD2;
     70c:	92 98       	cbi	0x12, 2	; 18
void WDT_On(void) {
	/*
	Watchdog timer enables with typical timeout period 2.1 
	second.
	*/
	WDTCR = (1<<WDE)|(1<<WDP2)|(1<<WDP1)|(1<<WDP0);
     70e:	cf e0       	ldi	r28, 0x0F	; 15
     710:	c1 bd       	out	0x21, r28	; 33
	UART_Init(vruli_baudrate);
    SHT31_Soft_Reset();
	clr_PD2;
    while (1) {	
		WDT_On();
	    SHT31_SingleShot_Mode(&vrf_temp, &vrf_hum);
     712:	61 e9       	ldi	r22, 0x91	; 145
     714:	70 e0       	ldi	r23, 0x00	; 0
     716:	82 e7       	ldi	r24, 0x72	; 114
     718:	90 e0       	ldi	r25, 0x00	; 0
     71a:	0e 94 de 06 	call	0xdbc	; 0xdbc <SHT31_SingleShot_Mode>
		WDT_Off();
     71e:	0e 94 c3 02 	call	0x586	; 0x586 <WDT_Off>
     722:	8f ef       	ldi	r24, 0xFF	; 255
     724:	9f eb       	ldi	r25, 0xBF	; 191
     726:	26 e0       	ldi	r18, 0x06	; 6
     728:	81 50       	subi	r24, 0x01	; 1
     72a:	90 40       	sbci	r25, 0x00	; 0
     72c:	20 40       	sbci	r18, 0x00	; 0
     72e:	e1 f7       	brne	.-8      	; 0x728 <main+0x19a>
     730:	00 c0       	rjmp	.+0      	; 0x732 <main+0x1a4>
     732:	00 00       	nop
     734:	ed cf       	rjmp	.-38     	; 0x710 <main+0x182>

00000736 <__vector_11>:
 	    _delay_ms(200);

    }
}

ISR (USART_RXC_vect) {
     736:	1f 92       	push	r1
     738:	0f 92       	push	r0
     73a:	0f b6       	in	r0, 0x3f	; 63
     73c:	0f 92       	push	r0
     73e:	11 24       	eor	r1, r1
     740:	8f 93       	push	r24
     742:	ef 93       	push	r30
     744:	ff 93       	push	r31
	if (vruc_countmodbuslength == 0) {
     746:	80 91 6b 00 	lds	r24, 0x006B	; 0x80006b <vruc_countmodbuslength>
     74a:	81 11       	cpse	r24, r1
     74c:	04 c0       	rjmp	.+8      	; 0x756 <__vector_11+0x20>
		vrui_timer0_overflow = 0;
     74e:	10 92 6d 00 	sts	0x006D, r1	; 0x80006d <vrui_timer0_overflow+0x1>
     752:	10 92 6c 00 	sts	0x006C, r1	; 0x80006c <vrui_timer0_overflow>
	} 
	vruc_modbusrtu_data[vruc_countmodbuslength] = UDR;
     756:	e0 91 6b 00 	lds	r30, 0x006B	; 0x80006b <vruc_countmodbuslength>
     75a:	8c b1       	in	r24, 0x0c	; 12
     75c:	f0 e0       	ldi	r31, 0x00	; 0
     75e:	e8 58       	subi	r30, 0x88	; 136
     760:	ff 4f       	sbci	r31, 0xFF	; 255
     762:	80 83       	st	Z, r24
	vruc_countmodbuslength++;
     764:	80 91 6b 00 	lds	r24, 0x006B	; 0x80006b <vruc_countmodbuslength>
     768:	8f 5f       	subi	r24, 0xFF	; 255
     76a:	80 93 6b 00 	sts	0x006B, r24	; 0x80006b <vruc_countmodbuslength>
}
     76e:	ff 91       	pop	r31
     770:	ef 91       	pop	r30
     772:	8f 91       	pop	r24
     774:	0f 90       	pop	r0
     776:	0f be       	out	0x3f, r0	; 63
     778:	0f 90       	pop	r0
     77a:	1f 90       	pop	r1
     77c:	18 95       	reti

0000077e <__vector_4>:
ISR(TIMER2_OVF_vect) {
     77e:	1f 92       	push	r1
     780:	0f 92       	push	r0
     782:	0f b6       	in	r0, 0x3f	; 63
     784:	0f 92       	push	r0
     786:	11 24       	eor	r1, r1
     788:	cf 92       	push	r12
     78a:	df 92       	push	r13
     78c:	ef 92       	push	r14
     78e:	ff 92       	push	r15
     790:	0f 93       	push	r16
     792:	1f 93       	push	r17
     794:	2f 93       	push	r18
     796:	3f 93       	push	r19
     798:	4f 93       	push	r20
     79a:	5f 93       	push	r21
     79c:	6f 93       	push	r22
     79e:	7f 93       	push	r23
     7a0:	8f 93       	push	r24
     7a2:	9f 93       	push	r25
     7a4:	af 93       	push	r26
     7a6:	bf 93       	push	r27
     7a8:	cf 93       	push	r28
     7aa:	ef 93       	push	r30
     7ac:	ff 93       	push	r31
	if (vruc_blinkled_flag == 1) {
     7ae:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <__data_end>
     7b2:	81 30       	cpi	r24, 0x01	; 1
     7b4:	49 f5       	brne	.+82     	; 0x808 <__vector_4+0x8a>
		vruc_blinkled_overflow++;
     7b6:	80 91 65 00 	lds	r24, 0x0065	; 0x800065 <vruc_blinkled_overflow>
     7ba:	90 91 66 00 	lds	r25, 0x0066	; 0x800066 <vruc_blinkled_overflow+0x1>
     7be:	01 96       	adiw	r24, 0x01	; 1
     7c0:	90 93 66 00 	sts	0x0066, r25	; 0x800066 <vruc_blinkled_overflow+0x1>
     7c4:	80 93 65 00 	sts	0x0065, r24	; 0x800065 <vruc_blinkled_overflow>
		fnScanLED_SetBaud();
     7c8:	0e 94 a8 01 	call	0x350	; 0x350 <fnScanLED_SetBaud>
		if (vruc_blinkled_overflow < 100) {
     7cc:	80 91 65 00 	lds	r24, 0x0065	; 0x800065 <vruc_blinkled_overflow>
     7d0:	90 91 66 00 	lds	r25, 0x0066	; 0x800066 <vruc_blinkled_overflow+0x1>
     7d4:	84 36       	cpi	r24, 0x64	; 100
     7d6:	91 05       	cpc	r25, r1
     7d8:	10 f4       	brcc	.+4      	; 0x7de <__vector_4+0x60>
			clr_PD3;
     7da:	93 98       	cbi	0x12, 3	; 18
     7dc:	8a c0       	rjmp	.+276    	; 0x8f2 <__vector_4+0x174>
		}
		else if (vruc_blinkled_overflow >=100 && vruc_blinkled_overflow < 200) {
     7de:	80 91 65 00 	lds	r24, 0x0065	; 0x800065 <vruc_blinkled_overflow>
     7e2:	90 91 66 00 	lds	r25, 0x0066	; 0x800066 <vruc_blinkled_overflow+0x1>
     7e6:	84 36       	cpi	r24, 0x64	; 100
     7e8:	91 05       	cpc	r25, r1
     7ea:	48 f0       	brcs	.+18     	; 0x7fe <__vector_4+0x80>
     7ec:	80 91 65 00 	lds	r24, 0x0065	; 0x800065 <vruc_blinkled_overflow>
     7f0:	90 91 66 00 	lds	r25, 0x0066	; 0x800066 <vruc_blinkled_overflow+0x1>
     7f4:	88 3c       	cpi	r24, 0xC8	; 200
     7f6:	91 05       	cpc	r25, r1
     7f8:	10 f4       	brcc	.+4      	; 0x7fe <__vector_4+0x80>
			set_PD3;
     7fa:	93 9a       	sbi	0x12, 3	; 18
     7fc:	7a c0       	rjmp	.+244    	; 0x8f2 <__vector_4+0x174>
		}
		else {
			vruc_blinkled_overflow = 0;
     7fe:	10 92 66 00 	sts	0x0066, r1	; 0x800066 <vruc_blinkled_overflow+0x1>
     802:	10 92 65 00 	sts	0x0065, r1	; 0x800065 <vruc_blinkled_overflow>
     806:	75 c0       	rjmp	.+234    	; 0x8f2 <__vector_4+0x174>
		}
	}
	else if (vruc_blinkled_flag == 0){
     808:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <__data_end>
     80c:	81 11       	cpse	r24, r1
     80e:	71 c0       	rjmp	.+226    	; 0x8f2 <__vector_4+0x174>
		if (vruc_countmodbuslength != 0) {
     810:	80 91 6b 00 	lds	r24, 0x006B	; 0x80006b <vruc_countmodbuslength>
     814:	88 23       	and	r24, r24
     816:	51 f0       	breq	.+20     	; 0x82c <__vector_4+0xae>
			vrui_timer0_overflow++;
     818:	80 91 6c 00 	lds	r24, 0x006C	; 0x80006c <vrui_timer0_overflow>
     81c:	90 91 6d 00 	lds	r25, 0x006D	; 0x80006d <vrui_timer0_overflow+0x1>
     820:	01 96       	adiw	r24, 0x01	; 1
     822:	90 93 6d 00 	sts	0x006D, r25	; 0x80006d <vrui_timer0_overflow+0x1>
     826:	80 93 6c 00 	sts	0x006C, r24	; 0x80006c <vrui_timer0_overflow>
     82a:	04 c0       	rjmp	.+8      	; 0x834 <__vector_4+0xb6>
		}
		else {
			vrui_timer0_overflow=0;
     82c:	10 92 6d 00 	sts	0x006D, r1	; 0x80006d <vrui_timer0_overflow+0x1>
     830:	10 92 6c 00 	sts	0x006C, r1	; 0x80006c <vrui_timer0_overflow>
		}
		if(vrui_timer0_overflow > 15) {
     834:	80 91 6c 00 	lds	r24, 0x006C	; 0x80006c <vrui_timer0_overflow>
     838:	90 91 6d 00 	lds	r25, 0x006D	; 0x80006d <vrui_timer0_overflow+0x1>
     83c:	40 97       	sbiw	r24, 0x10	; 16
     83e:	98 f0       	brcs	.+38     	; 0x866 <__vector_4+0xe8>
			if (vruc_modbuslength != vruc_countmodbuslength) {
     840:	90 91 6a 00 	lds	r25, 0x006A	; 0x80006a <vruc_modbuslength>
     844:	80 91 6b 00 	lds	r24, 0x006B	; 0x80006b <vruc_countmodbuslength>
     848:	98 17       	cp	r25, r24
     84a:	59 f0       	breq	.+22     	; 0x862 <__vector_4+0xe4>
				vruc_modbuslength = vruc_countmodbuslength;
     84c:	80 91 6b 00 	lds	r24, 0x006B	; 0x80006b <vruc_countmodbuslength>
     850:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <vruc_modbuslength>
				vruc_rxc_flag = 1;
     854:	81 e0       	ldi	r24, 0x01	; 1
     856:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <vruc_rxc_flag>
				vrui_timer0_overflow = 0;
     85a:	10 92 6d 00 	sts	0x006D, r1	; 0x80006d <vrui_timer0_overflow+0x1>
     85e:	10 92 6c 00 	sts	0x006C, r1	; 0x80006c <vrui_timer0_overflow>
			}
			vruc_countmodbuslength = 0;
     862:	10 92 6b 00 	sts	0x006B, r1	; 0x80006b <vruc_countmodbuslength>
		}
		vruc_scanvalue_overflow++;
     866:	80 91 67 00 	lds	r24, 0x0067	; 0x800067 <vruc_scanvalue_overflow>
     86a:	90 91 68 00 	lds	r25, 0x0068	; 0x800068 <vruc_scanvalue_overflow+0x1>
     86e:	01 96       	adiw	r24, 0x01	; 1
     870:	90 93 68 00 	sts	0x0068, r25	; 0x800068 <vruc_scanvalue_overflow+0x1>
     874:	80 93 67 00 	sts	0x0067, r24	; 0x800067 <vruc_scanvalue_overflow>
		if (vruc_scanvalue_overflow >= 500) {
     878:	80 91 67 00 	lds	r24, 0x0067	; 0x800067 <vruc_scanvalue_overflow>
     87c:	90 91 68 00 	lds	r25, 0x0068	; 0x800068 <vruc_scanvalue_overflow+0x1>
     880:	84 3f       	cpi	r24, 0xF4	; 244
     882:	91 40       	sbci	r25, 0x01	; 1
     884:	60 f1       	brcs	.+88     	; 0x8de <__vector_4+0x160>
			vrui_temp = vrf_temp*10;
     886:	20 e0       	ldi	r18, 0x00	; 0
     888:	30 e0       	ldi	r19, 0x00	; 0
     88a:	40 e2       	ldi	r20, 0x20	; 32
     88c:	51 e4       	ldi	r21, 0x41	; 65
     88e:	60 91 72 00 	lds	r22, 0x0072	; 0x800072 <vrf_temp>
     892:	70 91 73 00 	lds	r23, 0x0073	; 0x800073 <vrf_temp+0x1>
     896:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <vrf_temp+0x2>
     89a:	90 91 75 00 	lds	r25, 0x0075	; 0x800075 <vrf_temp+0x3>
     89e:	0e 94 93 09 	call	0x1326	; 0x1326 <__mulsf3>
     8a2:	0e 94 d6 08 	call	0x11ac	; 0x11ac <__fixunssfsi>
     8a6:	70 93 71 00 	sts	0x0071, r23	; 0x800071 <vrui_temp+0x1>
     8aa:	60 93 70 00 	sts	0x0070, r22	; 0x800070 <vrui_temp>
			vrui_hum  = vrf_hum*10;
     8ae:	20 e0       	ldi	r18, 0x00	; 0
     8b0:	30 e0       	ldi	r19, 0x00	; 0
     8b2:	40 e2       	ldi	r20, 0x20	; 32
     8b4:	51 e4       	ldi	r21, 0x41	; 65
     8b6:	60 91 91 00 	lds	r22, 0x0091	; 0x800091 <vrf_hum>
     8ba:	70 91 92 00 	lds	r23, 0x0092	; 0x800092 <vrf_hum+0x1>
     8be:	80 91 93 00 	lds	r24, 0x0093	; 0x800093 <vrf_hum+0x2>
     8c2:	90 91 94 00 	lds	r25, 0x0094	; 0x800094 <vrf_hum+0x3>
     8c6:	0e 94 93 09 	call	0x1326	; 0x1326 <__mulsf3>
     8ca:	0e 94 d6 08 	call	0x11ac	; 0x11ac <__fixunssfsi>
     8ce:	70 93 6f 00 	sts	0x006F, r23	; 0x80006f <vrui_hum+0x1>
     8d2:	60 93 6e 00 	sts	0x006E, r22	; 0x80006e <vrui_hum>
			vruc_scanvalue_overflow = 0;
     8d6:	10 92 68 00 	sts	0x0068, r1	; 0x800068 <vruc_scanvalue_overflow+0x1>
     8da:	10 92 67 00 	sts	0x0067, r1	; 0x800067 <vruc_scanvalue_overflow>
		}
		fnScanLED(vrui_hum, vrui_temp);
     8de:	60 91 70 00 	lds	r22, 0x0070	; 0x800070 <vrui_temp>
     8e2:	70 91 71 00 	lds	r23, 0x0071	; 0x800071 <vrui_temp+0x1>
     8e6:	80 91 6e 00 	lds	r24, 0x006E	; 0x80006e <vrui_hum>
     8ea:	90 91 6f 00 	lds	r25, 0x006F	; 0x80006f <vrui_hum+0x1>
     8ee:	0e 94 df 00 	call	0x1be	; 0x1be <fnScanLED>
	}
	if (vruc_rxc_flag == 1) {
     8f2:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <vruc_rxc_flag>
     8f6:	81 30       	cpi	r24, 0x01	; 1
     8f8:	c1 f5       	brne	.+112    	; 0x96a <__vector_4+0x1ec>
	    set_PD2;
     8fa:	92 9a       	sbi	0x12, 2	; 18
        ModbusRTU_FrameHandling(vruc_modbus_address, vruc_modbusrtu_data, vruc_modbuslength, vrf_temp*100, vrf_hum*100);
     8fc:	c0 91 6a 00 	lds	r28, 0x006A	; 0x80006a <vruc_modbuslength>
     900:	20 e0       	ldi	r18, 0x00	; 0
     902:	30 e0       	ldi	r19, 0x00	; 0
     904:	48 ec       	ldi	r20, 0xC8	; 200
     906:	52 e4       	ldi	r21, 0x42	; 66
     908:	60 91 91 00 	lds	r22, 0x0091	; 0x800091 <vrf_hum>
     90c:	70 91 92 00 	lds	r23, 0x0092	; 0x800092 <vrf_hum+0x1>
     910:	80 91 93 00 	lds	r24, 0x0093	; 0x800093 <vrf_hum+0x2>
     914:	90 91 94 00 	lds	r25, 0x0094	; 0x800094 <vrf_hum+0x3>
     918:	0e 94 93 09 	call	0x1326	; 0x1326 <__mulsf3>
     91c:	0e 94 d6 08 	call	0x11ac	; 0x11ac <__fixunssfsi>
     920:	6b 01       	movw	r12, r22
     922:	7c 01       	movw	r14, r24
     924:	20 e0       	ldi	r18, 0x00	; 0
     926:	30 e0       	ldi	r19, 0x00	; 0
     928:	48 ec       	ldi	r20, 0xC8	; 200
     92a:	52 e4       	ldi	r21, 0x42	; 66
     92c:	60 91 72 00 	lds	r22, 0x0072	; 0x800072 <vrf_temp>
     930:	70 91 73 00 	lds	r23, 0x0073	; 0x800073 <vrf_temp+0x1>
     934:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <vrf_temp+0x2>
     938:	90 91 75 00 	lds	r25, 0x0075	; 0x800075 <vrf_temp+0x3>
     93c:	0e 94 93 09 	call	0x1326	; 0x1326 <__mulsf3>
     940:	0e 94 d6 08 	call	0x11ac	; 0x11ac <__fixunssfsi>
     944:	86 01       	movw	r16, r12
     946:	9b 01       	movw	r18, r22
     948:	4c 2f       	mov	r20, r28
     94a:	68 e7       	ldi	r22, 0x78	; 120
     94c:	70 e0       	ldi	r23, 0x00	; 0
     94e:	80 91 63 00 	lds	r24, 0x0063	; 0x800063 <vruc_modbus_address>
     952:	0e 94 04 06 	call	0xc08	; 0xc08 <ModbusRTU_FrameHandling>
     956:	89 e9       	ldi	r24, 0x99	; 153
     958:	95 e1       	ldi	r25, 0x15	; 21
     95a:	01 97       	sbiw	r24, 0x01	; 1
     95c:	f1 f7       	brne	.-4      	; 0x95a <__vector_4+0x1dc>
     95e:	00 c0       	rjmp	.+0      	; 0x960 <__vector_4+0x1e2>
//         for (unsigned char i = 0; i < vruc_modbuslength;i++) {
//            UART_TxChar(vruc_modbusrtu_data[i]);
// 		   UART_TxChar(i);
//  	   }
	    _delay_ms(2);
	    vruc_rxc_flag = 0;
     960:	10 92 69 00 	sts	0x0069, r1	; 0x800069 <vruc_rxc_flag>
	    vruc_modbuslength = 0;
     964:	10 92 6a 00 	sts	0x006A, r1	; 0x80006a <vruc_modbuslength>
	    clr_PD2;
     968:	92 98       	cbi	0x12, 2	; 18
	}
     96a:	ff 91       	pop	r31
     96c:	ef 91       	pop	r30
     96e:	cf 91       	pop	r28
     970:	bf 91       	pop	r27
     972:	af 91       	pop	r26
     974:	9f 91       	pop	r25
     976:	8f 91       	pop	r24
     978:	7f 91       	pop	r23
     97a:	6f 91       	pop	r22
     97c:	5f 91       	pop	r21
     97e:	4f 91       	pop	r20
     980:	3f 91       	pop	r19
     982:	2f 91       	pop	r18
     984:	1f 91       	pop	r17
     986:	0f 91       	pop	r16
     988:	ff 90       	pop	r15
     98a:	ef 90       	pop	r14
     98c:	df 90       	pop	r13
     98e:	cf 90       	pop	r12
     990:	0f 90       	pop	r0
     992:	0f be       	out	0x3f, r0	; 63
     994:	0f 90       	pop	r0
     996:	1f 90       	pop	r1
     998:	18 95       	reti

0000099a <ModRTU_CheckCRC>:
     99a:	16 16       	cp	r1, r22
     99c:	17 06       	cpc	r1, r23
     99e:	dc f4       	brge	.+54     	; 0x9d6 <ModRTU_CheckCRC+0x3c>
     9a0:	fc 01       	movw	r30, r24
     9a2:	68 0f       	add	r22, r24
     9a4:	79 1f       	adc	r23, r25
     9a6:	8f ef       	ldi	r24, 0xFF	; 255
     9a8:	9f ef       	ldi	r25, 0xFF	; 255
     9aa:	21 91       	ld	r18, Z+
     9ac:	82 27       	eor	r24, r18
     9ae:	28 e0       	ldi	r18, 0x08	; 8
     9b0:	30 e0       	ldi	r19, 0x00	; 0
     9b2:	80 ff       	sbrs	r24, 0
     9b4:	07 c0       	rjmp	.+14     	; 0x9c4 <ModRTU_CheckCRC+0x2a>
     9b6:	96 95       	lsr	r25
     9b8:	87 95       	ror	r24
     9ba:	41 e0       	ldi	r20, 0x01	; 1
     9bc:	84 27       	eor	r24, r20
     9be:	40 ea       	ldi	r20, 0xA0	; 160
     9c0:	94 27       	eor	r25, r20
     9c2:	02 c0       	rjmp	.+4      	; 0x9c8 <ModRTU_CheckCRC+0x2e>
     9c4:	96 95       	lsr	r25
     9c6:	87 95       	ror	r24
     9c8:	21 50       	subi	r18, 0x01	; 1
     9ca:	31 09       	sbc	r19, r1
     9cc:	91 f7       	brne	.-28     	; 0x9b2 <ModRTU_CheckCRC+0x18>
     9ce:	e6 17       	cp	r30, r22
     9d0:	f7 07       	cpc	r31, r23
     9d2:	59 f7       	brne	.-42     	; 0x9aa <ModRTU_CheckCRC+0x10>
     9d4:	08 95       	ret
     9d6:	8f ef       	ldi	r24, 0xFF	; 255
     9d8:	9f ef       	ldi	r25, 0xFF	; 255
     9da:	08 95       	ret

000009dc <ModbusRTU_ErrorHandling>:
     9dc:	ef 92       	push	r14
     9de:	ff 92       	push	r15
     9e0:	0f 93       	push	r16
     9e2:	1f 93       	push	r17
     9e4:	cf 93       	push	r28
     9e6:	df 93       	push	r29
     9e8:	cd b7       	in	r28, 0x3d	; 61
     9ea:	de b7       	in	r29, 0x3e	; 62
     9ec:	2a 97       	sbiw	r28, 0x0a	; 10
     9ee:	0f b6       	in	r0, 0x3f	; 63
     9f0:	f8 94       	cli
     9f2:	de bf       	out	0x3e, r29	; 62
     9f4:	0f be       	out	0x3f, r0	; 63
     9f6:	cd bf       	out	0x3d, r28	; 61
     9f8:	62 30       	cpi	r22, 0x02	; 2
     9fa:	71 f1       	breq	.+92     	; 0xa58 <ModbusRTU_ErrorHandling+0x7c>
     9fc:	18 f4       	brcc	.+6      	; 0xa04 <ModbusRTU_ErrorHandling+0x28>
     9fe:	61 30       	cpi	r22, 0x01	; 1
     a00:	41 f0       	breq	.+16     	; 0xa12 <ModbusRTU_ErrorHandling+0x36>
     a02:	92 c0       	rjmp	.+292    	; 0xb28 <ModbusRTU_ErrorHandling+0x14c>
     a04:	63 30       	cpi	r22, 0x03	; 3
     a06:	09 f4       	brne	.+2      	; 0xa0a <ModbusRTU_ErrorHandling+0x2e>
     a08:	4a c0       	rjmp	.+148    	; 0xa9e <ModbusRTU_ErrorHandling+0xc2>
     a0a:	64 30       	cpi	r22, 0x04	; 4
     a0c:	09 f4       	brne	.+2      	; 0xa10 <ModbusRTU_ErrorHandling+0x34>
     a0e:	6a c0       	rjmp	.+212    	; 0xae4 <ModbusRTU_ErrorHandling+0x108>
     a10:	8b c0       	rjmp	.+278    	; 0xb28 <ModbusRTU_ErrorHandling+0x14c>
     a12:	89 83       	std	Y+1, r24	; 0x01
     a14:	81 e8       	ldi	r24, 0x81	; 129
     a16:	8a 83       	std	Y+2, r24	; 0x02
     a18:	81 e0       	ldi	r24, 0x01	; 1
     a1a:	8b 83       	std	Y+3, r24	; 0x03
     a1c:	63 e0       	ldi	r22, 0x03	; 3
     a1e:	70 e0       	ldi	r23, 0x00	; 0
     a20:	ce 01       	movw	r24, r28
     a22:	01 96       	adiw	r24, 0x01	; 1
     a24:	0e 94 cd 04 	call	0x99a	; 0x99a <ModRTU_CheckCRC>
     a28:	8c 83       	std	Y+4, r24	; 0x04
     a2a:	63 e0       	ldi	r22, 0x03	; 3
     a2c:	70 e0       	ldi	r23, 0x00	; 0
     a2e:	ce 01       	movw	r24, r28
     a30:	01 96       	adiw	r24, 0x01	; 1
     a32:	0e 94 cd 04 	call	0x99a	; 0x99a <ModRTU_CheckCRC>
     a36:	9d 83       	std	Y+5, r25	; 0x05
     a38:	8e 01       	movw	r16, r28
     a3a:	0f 5f       	subi	r16, 0xFF	; 255
     a3c:	1f 4f       	sbci	r17, 0xFF	; 255
     a3e:	7e 01       	movw	r14, r28
     a40:	86 e0       	ldi	r24, 0x06	; 6
     a42:	e8 0e       	add	r14, r24
     a44:	f1 1c       	adc	r15, r1
     a46:	f8 01       	movw	r30, r16
     a48:	81 91       	ld	r24, Z+
     a4a:	8f 01       	movw	r16, r30
     a4c:	0e 94 f3 07 	call	0xfe6	; 0xfe6 <UART_TxChar>
     a50:	e0 16       	cp	r14, r16
     a52:	f1 06       	cpc	r15, r17
     a54:	c1 f7       	brne	.-16     	; 0xa46 <ModbusRTU_ErrorHandling+0x6a>
     a56:	68 c0       	rjmp	.+208    	; 0xb28 <ModbusRTU_ErrorHandling+0x14c>
     a58:	89 83       	std	Y+1, r24	; 0x01
     a5a:	81 e8       	ldi	r24, 0x81	; 129
     a5c:	8a 83       	std	Y+2, r24	; 0x02
     a5e:	82 e0       	ldi	r24, 0x02	; 2
     a60:	8b 83       	std	Y+3, r24	; 0x03
     a62:	63 e0       	ldi	r22, 0x03	; 3
     a64:	70 e0       	ldi	r23, 0x00	; 0
     a66:	ce 01       	movw	r24, r28
     a68:	01 96       	adiw	r24, 0x01	; 1
     a6a:	0e 94 cd 04 	call	0x99a	; 0x99a <ModRTU_CheckCRC>
     a6e:	8c 83       	std	Y+4, r24	; 0x04
     a70:	63 e0       	ldi	r22, 0x03	; 3
     a72:	70 e0       	ldi	r23, 0x00	; 0
     a74:	ce 01       	movw	r24, r28
     a76:	01 96       	adiw	r24, 0x01	; 1
     a78:	0e 94 cd 04 	call	0x99a	; 0x99a <ModRTU_CheckCRC>
     a7c:	9d 83       	std	Y+5, r25	; 0x05
     a7e:	8e 01       	movw	r16, r28
     a80:	0f 5f       	subi	r16, 0xFF	; 255
     a82:	1f 4f       	sbci	r17, 0xFF	; 255
     a84:	7e 01       	movw	r14, r28
     a86:	f6 e0       	ldi	r31, 0x06	; 6
     a88:	ef 0e       	add	r14, r31
     a8a:	f1 1c       	adc	r15, r1
     a8c:	f8 01       	movw	r30, r16
     a8e:	81 91       	ld	r24, Z+
     a90:	8f 01       	movw	r16, r30
     a92:	0e 94 f3 07 	call	0xfe6	; 0xfe6 <UART_TxChar>
     a96:	0e 15       	cp	r16, r14
     a98:	1f 05       	cpc	r17, r15
     a9a:	c1 f7       	brne	.-16     	; 0xa8c <ModbusRTU_ErrorHandling+0xb0>
     a9c:	45 c0       	rjmp	.+138    	; 0xb28 <ModbusRTU_ErrorHandling+0x14c>
     a9e:	89 83       	std	Y+1, r24	; 0x01
     aa0:	84 e8       	ldi	r24, 0x84	; 132
     aa2:	8a 83       	std	Y+2, r24	; 0x02
     aa4:	83 e0       	ldi	r24, 0x03	; 3
     aa6:	8b 83       	std	Y+3, r24	; 0x03
     aa8:	63 e0       	ldi	r22, 0x03	; 3
     aaa:	70 e0       	ldi	r23, 0x00	; 0
     aac:	ce 01       	movw	r24, r28
     aae:	01 96       	adiw	r24, 0x01	; 1
     ab0:	0e 94 cd 04 	call	0x99a	; 0x99a <ModRTU_CheckCRC>
     ab4:	8c 83       	std	Y+4, r24	; 0x04
     ab6:	63 e0       	ldi	r22, 0x03	; 3
     ab8:	70 e0       	ldi	r23, 0x00	; 0
     aba:	ce 01       	movw	r24, r28
     abc:	01 96       	adiw	r24, 0x01	; 1
     abe:	0e 94 cd 04 	call	0x99a	; 0x99a <ModRTU_CheckCRC>
     ac2:	9d 83       	std	Y+5, r25	; 0x05
     ac4:	8e 01       	movw	r16, r28
     ac6:	0f 5f       	subi	r16, 0xFF	; 255
     ac8:	1f 4f       	sbci	r17, 0xFF	; 255
     aca:	7e 01       	movw	r14, r28
     acc:	f6 e0       	ldi	r31, 0x06	; 6
     ace:	ef 0e       	add	r14, r31
     ad0:	f1 1c       	adc	r15, r1
     ad2:	f8 01       	movw	r30, r16
     ad4:	81 91       	ld	r24, Z+
     ad6:	8f 01       	movw	r16, r30
     ad8:	0e 94 f3 07 	call	0xfe6	; 0xfe6 <UART_TxChar>
     adc:	e0 16       	cp	r14, r16
     ade:	f1 06       	cpc	r15, r17
     ae0:	c1 f7       	brne	.-16     	; 0xad2 <ModbusRTU_ErrorHandling+0xf6>
     ae2:	22 c0       	rjmp	.+68     	; 0xb28 <ModbusRTU_ErrorHandling+0x14c>
     ae4:	89 83       	std	Y+1, r24	; 0x01
     ae6:	84 e8       	ldi	r24, 0x84	; 132
     ae8:	8a 83       	std	Y+2, r24	; 0x02
     aea:	84 e0       	ldi	r24, 0x04	; 4
     aec:	8b 83       	std	Y+3, r24	; 0x03
     aee:	63 e0       	ldi	r22, 0x03	; 3
     af0:	70 e0       	ldi	r23, 0x00	; 0
     af2:	ce 01       	movw	r24, r28
     af4:	01 96       	adiw	r24, 0x01	; 1
     af6:	0e 94 cd 04 	call	0x99a	; 0x99a <ModRTU_CheckCRC>
     afa:	8c 83       	std	Y+4, r24	; 0x04
     afc:	63 e0       	ldi	r22, 0x03	; 3
     afe:	70 e0       	ldi	r23, 0x00	; 0
     b00:	ce 01       	movw	r24, r28
     b02:	01 96       	adiw	r24, 0x01	; 1
     b04:	0e 94 cd 04 	call	0x99a	; 0x99a <ModRTU_CheckCRC>
     b08:	9d 83       	std	Y+5, r25	; 0x05
     b0a:	8e 01       	movw	r16, r28
     b0c:	0f 5f       	subi	r16, 0xFF	; 255
     b0e:	1f 4f       	sbci	r17, 0xFF	; 255
     b10:	7e 01       	movw	r14, r28
     b12:	f6 e0       	ldi	r31, 0x06	; 6
     b14:	ef 0e       	add	r14, r31
     b16:	f1 1c       	adc	r15, r1
     b18:	f8 01       	movw	r30, r16
     b1a:	81 91       	ld	r24, Z+
     b1c:	8f 01       	movw	r16, r30
     b1e:	0e 94 f3 07 	call	0xfe6	; 0xfe6 <UART_TxChar>
     b22:	0e 15       	cp	r16, r14
     b24:	1f 05       	cpc	r17, r15
     b26:	c1 f7       	brne	.-16     	; 0xb18 <ModbusRTU_ErrorHandling+0x13c>
     b28:	2a 96       	adiw	r28, 0x0a	; 10
     b2a:	0f b6       	in	r0, 0x3f	; 63
     b2c:	f8 94       	cli
     b2e:	de bf       	out	0x3e, r29	; 62
     b30:	0f be       	out	0x3f, r0	; 63
     b32:	cd bf       	out	0x3d, r28	; 61
     b34:	df 91       	pop	r29
     b36:	cf 91       	pop	r28
     b38:	1f 91       	pop	r17
     b3a:	0f 91       	pop	r16
     b3c:	ff 90       	pop	r15
     b3e:	ef 90       	pop	r14
     b40:	08 95       	ret

00000b42 <ModbusRTU_SendFrame>:
     b42:	8f 92       	push	r8
     b44:	9f 92       	push	r9
     b46:	af 92       	push	r10
     b48:	bf 92       	push	r11
     b4a:	cf 92       	push	r12
     b4c:	df 92       	push	r13
     b4e:	ef 92       	push	r14
     b50:	ff 92       	push	r15
     b52:	0f 93       	push	r16
     b54:	1f 93       	push	r17
     b56:	cf 93       	push	r28
     b58:	df 93       	push	r29
     b5a:	cd b7       	in	r28, 0x3d	; 61
     b5c:	de b7       	in	r29, 0x3e	; 62
     b5e:	ad b6       	in	r10, 0x3d	; 61
     b60:	be b6       	in	r11, 0x3e	; 62
     b62:	46 2f       	mov	r20, r22
     b64:	50 e0       	ldi	r21, 0x00	; 0
     b66:	2d b7       	in	r18, 0x3d	; 61
     b68:	3e b7       	in	r19, 0x3e	; 62
     b6a:	24 1b       	sub	r18, r20
     b6c:	35 0b       	sbc	r19, r21
     b6e:	0f b6       	in	r0, 0x3f	; 63
     b70:	f8 94       	cli
     b72:	3e bf       	out	0x3e, r19	; 62
     b74:	0f be       	out	0x3f, r0	; 63
     b76:	2d bf       	out	0x3d, r18	; 61
     b78:	ed b7       	in	r30, 0x3d	; 61
     b7a:	fe b7       	in	r31, 0x3e	; 62
     b7c:	31 96       	adiw	r30, 0x01	; 1
     b7e:	6f 01       	movw	r12, r30
     b80:	66 23       	and	r22, r22
     b82:	21 f1       	breq	.+72     	; 0xbcc <ModbusRTU_SendFrame+0x8a>
     b84:	fc 01       	movw	r30, r24
     b86:	86 01       	movw	r16, r12
     b88:	61 50       	subi	r22, 0x01	; 1
     b8a:	e6 2e       	mov	r14, r22
     b8c:	f1 2c       	mov	r15, r1
     b8e:	2f ef       	ldi	r18, 0xFF	; 255
     b90:	e2 1a       	sub	r14, r18
     b92:	f2 0a       	sbc	r15, r18
     b94:	9c 01       	movw	r18, r24
     b96:	2e 0d       	add	r18, r14
     b98:	3f 1d       	adc	r19, r15
     b9a:	d6 01       	movw	r26, r12
     b9c:	91 91       	ld	r25, Z+
     b9e:	9d 93       	st	X+, r25
     ba0:	e2 17       	cp	r30, r18
     ba2:	f3 07       	cpc	r31, r19
     ba4:	d9 f7       	brne	.-10     	; 0xb9c <ModbusRTU_SendFrame+0x5a>
     ba6:	09 c0       	rjmp	.+18     	; 0xbba <ModbusRTU_SendFrame+0x78>
     ba8:	f8 01       	movw	r30, r16
     baa:	81 91       	ld	r24, Z+
     bac:	8f 01       	movw	r16, r30
     bae:	0e 94 f3 07 	call	0xfe6	; 0xfe6 <UART_TxChar>
     bb2:	e0 16       	cp	r14, r16
     bb4:	f1 06       	cpc	r15, r17
     bb6:	c1 f7       	brne	.-16     	; 0xba8 <ModbusRTU_SendFrame+0x66>
     bb8:	0f c0       	rjmp	.+30     	; 0xbd8 <ModbusRTU_SendFrame+0x96>
     bba:	ba 01       	movw	r22, r20
     bbc:	c6 01       	movw	r24, r12
     bbe:	0e 94 cd 04 	call	0x99a	; 0x99a <ModRTU_CheckCRC>
     bc2:	88 2e       	mov	r8, r24
     bc4:	99 2e       	mov	r9, r25
     bc6:	ec 0c       	add	r14, r12
     bc8:	fd 1c       	adc	r15, r13
     bca:	ee cf       	rjmp	.-36     	; 0xba8 <ModbusRTU_SendFrame+0x66>
     bcc:	ba 01       	movw	r22, r20
     bce:	cf 01       	movw	r24, r30
     bd0:	0e 94 cd 04 	call	0x99a	; 0x99a <ModRTU_CheckCRC>
     bd4:	88 2e       	mov	r8, r24
     bd6:	99 2e       	mov	r9, r25
     bd8:	88 2d       	mov	r24, r8
     bda:	0e 94 f3 07 	call	0xfe6	; 0xfe6 <UART_TxChar>
     bde:	89 2d       	mov	r24, r9
     be0:	0e 94 f3 07 	call	0xfe6	; 0xfe6 <UART_TxChar>
     be4:	0f b6       	in	r0, 0x3f	; 63
     be6:	f8 94       	cli
     be8:	be be       	out	0x3e, r11	; 62
     bea:	0f be       	out	0x3f, r0	; 63
     bec:	ad be       	out	0x3d, r10	; 61
     bee:	df 91       	pop	r29
     bf0:	cf 91       	pop	r28
     bf2:	1f 91       	pop	r17
     bf4:	0f 91       	pop	r16
     bf6:	ff 90       	pop	r15
     bf8:	ef 90       	pop	r14
     bfa:	df 90       	pop	r13
     bfc:	cf 90       	pop	r12
     bfe:	bf 90       	pop	r11
     c00:	af 90       	pop	r10
     c02:	9f 90       	pop	r9
     c04:	8f 90       	pop	r8
     c06:	08 95       	ret

00000c08 <ModbusRTU_FrameHandling>:
     c08:	8f 92       	push	r8
     c0a:	9f 92       	push	r9
     c0c:	af 92       	push	r10
     c0e:	bf 92       	push	r11
     c10:	cf 92       	push	r12
     c12:	df 92       	push	r13
     c14:	ef 92       	push	r14
     c16:	ff 92       	push	r15
     c18:	0f 93       	push	r16
     c1a:	1f 93       	push	r17
     c1c:	cf 93       	push	r28
     c1e:	df 93       	push	r29
     c20:	cd b7       	in	r28, 0x3d	; 61
     c22:	de b7       	in	r29, 0x3e	; 62
     c24:	2a 97       	sbiw	r28, 0x0a	; 10
     c26:	0f b6       	in	r0, 0x3f	; 63
     c28:	f8 94       	cli
     c2a:	de bf       	out	0x3e, r29	; 62
     c2c:	0f be       	out	0x3f, r0	; 63
     c2e:	cd bf       	out	0x3d, r28	; 61
     c30:	fb 01       	movw	r30, r22
     c32:	c0 80       	ld	r12, Z
     c34:	c8 12       	cpse	r12, r24
     c36:	9e c0       	rjmp	.+316    	; 0xd74 <ModbusRTU_FrameHandling+0x16c>
     c38:	83 2e       	mov	r8, r19
     c3a:	92 2e       	mov	r9, r18
     c3c:	d4 2e       	mov	r13, r20
     c3e:	7b 01       	movw	r14, r22
     c40:	a4 2e       	mov	r10, r20
     c42:	b1 2c       	mov	r11, r1
     c44:	b5 01       	movw	r22, r10
     c46:	62 50       	subi	r22, 0x02	; 2
     c48:	71 09       	sbc	r23, r1
     c4a:	cf 01       	movw	r24, r30
     c4c:	0e 94 cd 04 	call	0x99a	; 0x99a <ModRTU_CheckCRC>
     c50:	f7 01       	movw	r30, r14
     c52:	ea 0d       	add	r30, r10
     c54:	fb 1d       	adc	r31, r11
     c56:	31 97       	sbiw	r30, 0x01	; 1
     c58:	20 81       	ld	r18, Z
     c5a:	30 e0       	ldi	r19, 0x00	; 0
     c5c:	49 2f       	mov	r20, r25
     c5e:	55 27       	eor	r21, r21
     c60:	24 17       	cp	r18, r20
     c62:	35 07       	cpc	r19, r21
     c64:	09 f0       	breq	.+2      	; 0xc68 <ModbusRTU_FrameHandling+0x60>
     c66:	86 c0       	rjmp	.+268    	; 0xd74 <ModbusRTU_FrameHandling+0x16c>
     c68:	ae 0c       	add	r10, r14
     c6a:	bf 1c       	adc	r11, r15
     c6c:	f5 01       	movw	r30, r10
     c6e:	32 97       	sbiw	r30, 0x02	; 2
     c70:	20 81       	ld	r18, Z
     c72:	30 e0       	ldi	r19, 0x00	; 0
     c74:	99 27       	eor	r25, r25
     c76:	28 17       	cp	r18, r24
     c78:	39 07       	cpc	r19, r25
     c7a:	09 f0       	breq	.+2      	; 0xc7e <ModbusRTU_FrameHandling+0x76>
     c7c:	7b c0       	rjmp	.+246    	; 0xd74 <ModbusRTU_FrameHandling+0x16c>
     c7e:	f8 e0       	ldi	r31, 0x08	; 8
     c80:	df 12       	cpse	r13, r31
     c82:	74 c0       	rjmp	.+232    	; 0xd6c <ModbusRTU_FrameHandling+0x164>
     c84:	f7 01       	movw	r30, r14
     c86:	81 81       	ldd	r24, Z+1	; 0x01
     c88:	84 30       	cpi	r24, 0x04	; 4
     c8a:	09 f0       	breq	.+2      	; 0xc8e <ModbusRTU_FrameHandling+0x86>
     c8c:	6a c0       	rjmp	.+212    	; 0xd62 <ModbusRTU_FrameHandling+0x15a>
     c8e:	22 81       	ldd	r18, Z+2	; 0x02
     c90:	30 e0       	ldi	r19, 0x00	; 0
     c92:	32 2f       	mov	r19, r18
     c94:	22 27       	eor	r18, r18
     c96:	83 81       	ldd	r24, Z+3	; 0x03
     c98:	28 0f       	add	r18, r24
     c9a:	31 1d       	adc	r19, r1
     c9c:	84 81       	ldd	r24, Z+4	; 0x04
     c9e:	90 e0       	ldi	r25, 0x00	; 0
     ca0:	98 2f       	mov	r25, r24
     ca2:	88 27       	eor	r24, r24
     ca4:	45 81       	ldd	r20, Z+5	; 0x05
     ca6:	84 0f       	add	r24, r20
     ca8:	91 1d       	adc	r25, r1
     caa:	21 15       	cp	r18, r1
     cac:	31 05       	cpc	r19, r1
     cae:	89 f5       	brne	.+98     	; 0xd12 <ModbusRTU_FrameHandling+0x10a>
     cb0:	00 97       	sbiw	r24, 0x00	; 0
     cb2:	51 f4       	brne	.+20     	; 0xcc8 <ModbusRTU_FrameHandling+0xc0>
     cb4:	c9 82       	std	Y+1, r12	; 0x01
     cb6:	84 e0       	ldi	r24, 0x04	; 4
     cb8:	8a 83       	std	Y+2, r24	; 0x02
     cba:	1b 82       	std	Y+3, r1	; 0x03
     cbc:	63 e0       	ldi	r22, 0x03	; 3
     cbe:	ce 01       	movw	r24, r28
     cc0:	01 96       	adiw	r24, 0x01	; 1
     cc2:	0e 94 a1 05 	call	0xb42	; 0xb42 <ModbusRTU_SendFrame>
     cc6:	56 c0       	rjmp	.+172    	; 0xd74 <ModbusRTU_FrameHandling+0x16c>
     cc8:	81 30       	cpi	r24, 0x01	; 1
     cca:	91 05       	cpc	r25, r1
     ccc:	69 f4       	brne	.+26     	; 0xce8 <ModbusRTU_FrameHandling+0xe0>
     cce:	c9 82       	std	Y+1, r12	; 0x01
     cd0:	84 e0       	ldi	r24, 0x04	; 4
     cd2:	8a 83       	std	Y+2, r24	; 0x02
     cd4:	82 e0       	ldi	r24, 0x02	; 2
     cd6:	8b 83       	std	Y+3, r24	; 0x03
     cd8:	8c 82       	std	Y+4, r8	; 0x04
     cda:	9d 82       	std	Y+5, r9	; 0x05
     cdc:	65 e0       	ldi	r22, 0x05	; 5
     cde:	ce 01       	movw	r24, r28
     ce0:	01 96       	adiw	r24, 0x01	; 1
     ce2:	0e 94 a1 05 	call	0xb42	; 0xb42 <ModbusRTU_SendFrame>
     ce6:	46 c0       	rjmp	.+140    	; 0xd74 <ModbusRTU_FrameHandling+0x16c>
     ce8:	02 97       	sbiw	r24, 0x02	; 2
     cea:	71 f4       	brne	.+28     	; 0xd08 <ModbusRTU_FrameHandling+0x100>
     cec:	c9 82       	std	Y+1, r12	; 0x01
     cee:	84 e0       	ldi	r24, 0x04	; 4
     cf0:	8a 83       	std	Y+2, r24	; 0x02
     cf2:	8b 83       	std	Y+3, r24	; 0x03
     cf4:	8c 82       	std	Y+4, r8	; 0x04
     cf6:	9d 82       	std	Y+5, r9	; 0x05
     cf8:	1e 83       	std	Y+6, r17	; 0x06
     cfa:	0f 83       	std	Y+7, r16	; 0x07
     cfc:	67 e0       	ldi	r22, 0x07	; 7
     cfe:	ce 01       	movw	r24, r28
     d00:	01 96       	adiw	r24, 0x01	; 1
     d02:	0e 94 a1 05 	call	0xb42	; 0xb42 <ModbusRTU_SendFrame>
     d06:	36 c0       	rjmp	.+108    	; 0xd74 <ModbusRTU_FrameHandling+0x16c>
     d08:	63 e0       	ldi	r22, 0x03	; 3
     d0a:	8c 2d       	mov	r24, r12
     d0c:	0e 94 ee 04 	call	0x9dc	; 0x9dc <ModbusRTU_ErrorHandling>
     d10:	31 c0       	rjmp	.+98     	; 0xd74 <ModbusRTU_FrameHandling+0x16c>
     d12:	21 30       	cpi	r18, 0x01	; 1
     d14:	31 05       	cpc	r19, r1
     d16:	01 f5       	brne	.+64     	; 0xd58 <ModbusRTU_FrameHandling+0x150>
     d18:	00 97       	sbiw	r24, 0x00	; 0
     d1a:	51 f4       	brne	.+20     	; 0xd30 <ModbusRTU_FrameHandling+0x128>
     d1c:	c9 82       	std	Y+1, r12	; 0x01
     d1e:	84 e0       	ldi	r24, 0x04	; 4
     d20:	8a 83       	std	Y+2, r24	; 0x02
     d22:	1b 82       	std	Y+3, r1	; 0x03
     d24:	63 e0       	ldi	r22, 0x03	; 3
     d26:	ce 01       	movw	r24, r28
     d28:	01 96       	adiw	r24, 0x01	; 1
     d2a:	0e 94 a1 05 	call	0xb42	; 0xb42 <ModbusRTU_SendFrame>
     d2e:	22 c0       	rjmp	.+68     	; 0xd74 <ModbusRTU_FrameHandling+0x16c>
     d30:	01 97       	sbiw	r24, 0x01	; 1
     d32:	69 f4       	brne	.+26     	; 0xd4e <ModbusRTU_FrameHandling+0x146>
     d34:	c9 82       	std	Y+1, r12	; 0x01
     d36:	84 e0       	ldi	r24, 0x04	; 4
     d38:	8a 83       	std	Y+2, r24	; 0x02
     d3a:	82 e0       	ldi	r24, 0x02	; 2
     d3c:	8b 83       	std	Y+3, r24	; 0x03
     d3e:	1c 83       	std	Y+4, r17	; 0x04
     d40:	0d 83       	std	Y+5, r16	; 0x05
     d42:	65 e0       	ldi	r22, 0x05	; 5
     d44:	ce 01       	movw	r24, r28
     d46:	01 96       	adiw	r24, 0x01	; 1
     d48:	0e 94 a1 05 	call	0xb42	; 0xb42 <ModbusRTU_SendFrame>
     d4c:	13 c0       	rjmp	.+38     	; 0xd74 <ModbusRTU_FrameHandling+0x16c>
     d4e:	63 e0       	ldi	r22, 0x03	; 3
     d50:	8c 2d       	mov	r24, r12
     d52:	0e 94 ee 04 	call	0x9dc	; 0x9dc <ModbusRTU_ErrorHandling>
     d56:	0e c0       	rjmp	.+28     	; 0xd74 <ModbusRTU_FrameHandling+0x16c>
     d58:	62 e0       	ldi	r22, 0x02	; 2
     d5a:	8c 2d       	mov	r24, r12
     d5c:	0e 94 ee 04 	call	0x9dc	; 0x9dc <ModbusRTU_ErrorHandling>
     d60:	09 c0       	rjmp	.+18     	; 0xd74 <ModbusRTU_FrameHandling+0x16c>
     d62:	61 e0       	ldi	r22, 0x01	; 1
     d64:	8c 2d       	mov	r24, r12
     d66:	0e 94 ee 04 	call	0x9dc	; 0x9dc <ModbusRTU_ErrorHandling>
     d6a:	04 c0       	rjmp	.+8      	; 0xd74 <ModbusRTU_FrameHandling+0x16c>
     d6c:	64 e0       	ldi	r22, 0x04	; 4
     d6e:	8c 2d       	mov	r24, r12
     d70:	0e 94 ee 04 	call	0x9dc	; 0x9dc <ModbusRTU_ErrorHandling>
     d74:	2a 96       	adiw	r28, 0x0a	; 10
     d76:	0f b6       	in	r0, 0x3f	; 63
     d78:	f8 94       	cli
     d7a:	de bf       	out	0x3e, r29	; 62
     d7c:	0f be       	out	0x3f, r0	; 63
     d7e:	cd bf       	out	0x3d, r28	; 61
     d80:	df 91       	pop	r29
     d82:	cf 91       	pop	r28
     d84:	1f 91       	pop	r17
     d86:	0f 91       	pop	r16
     d88:	ff 90       	pop	r15
     d8a:	ef 90       	pop	r14
     d8c:	df 90       	pop	r13
     d8e:	cf 90       	pop	r12
     d90:	bf 90       	pop	r11
     d92:	af 90       	pop	r10
     d94:	9f 90       	pop	r9
     d96:	8f 90       	pop	r8
     d98:	08 95       	ret

00000d9a <SHT31_Init>:
#include "Function_Define.h"
#include "SFR_Macro.h"
#include <util/delay.h>

void SHT31_Init(unsigned long int vruli_freq) {
	TWIInit(vruli_freq);
     d9a:	0e 94 70 07 	call	0xee0	; 0xee0 <TWIInit>
     d9e:	08 95       	ret

00000da0 <SHT31_Soft_Reset>:
}
void SHT31_Soft_Reset(void){
	TWIStart();
     da0:	0e 94 8a 07 	call	0xf14	; 0xf14 <TWIStart>
	TWIWrite(SHT31_ADDR_WRITE);
     da4:	8a e8       	ldi	r24, 0x8A	; 138
     da6:	0e 94 93 07 	call	0xf26	; 0xf26 <TWIWrite>
	TWIWrite(HIBYTE(SHT31_SOFT_RESET));
     daa:	80 e3       	ldi	r24, 0x30	; 48
     dac:	0e 94 93 07 	call	0xf26	; 0xf26 <TWIWrite>
	TWIWrite(LOBYTE(SHT31_SOFT_RESET));
     db0:	82 ea       	ldi	r24, 0xA2	; 162
     db2:	0e 94 93 07 	call	0xf26	; 0xf26 <TWIWrite>
	TWIStop();
     db6:	0e 94 90 07 	call	0xf20	; 0xf20 <TWIStop>
     dba:	08 95       	ret

00000dbc <SHT31_SingleShot_Mode>:
}
void SHT31_SingleShot_Mode(float *vrf_temp, float *vrf_hum) {
     dbc:	cf 92       	push	r12
     dbe:	df 92       	push	r13
     dc0:	ef 92       	push	r14
     dc2:	ff 92       	push	r15
     dc4:	0f 93       	push	r16
     dc6:	1f 93       	push	r17
     dc8:	cf 93       	push	r28
     dca:	df 93       	push	r29
     dcc:	7c 01       	movw	r14, r24
     dce:	eb 01       	movw	r28, r22
	unsigned char vruc_temp[2], vruc_hum[2], vruc_crc[2];
	unsigned int vrui_tc,vrui_rh;
	TWIStart();
     dd0:	0e 94 8a 07 	call	0xf14	; 0xf14 <TWIStart>
	TWIWrite(SHT31_ADDR_WRITE);
     dd4:	8a e8       	ldi	r24, 0x8A	; 138
     dd6:	0e 94 93 07 	call	0xf26	; 0xf26 <TWIWrite>
	TWIWrite(HIBYTE(SHT31_ENABLECLOCK_HI));
     dda:	8c e2       	ldi	r24, 0x2C	; 44
     ddc:	0e 94 93 07 	call	0xf26	; 0xf26 <TWIWrite>
	TWIWrite(LOBYTE(SHT31_ENABLECLOCK_HI));
     de0:	86 e0       	ldi	r24, 0x06	; 6
     de2:	0e 94 93 07 	call	0xf26	; 0xf26 <TWIWrite>
	TWIStop();
     de6:	0e 94 90 07 	call	0xf20	; 0xf20 <TWIStop>
     dea:	8c ec       	ldi	r24, 0xCC	; 204
     dec:	9a e0       	ldi	r25, 0x0A	; 10
     dee:	01 97       	sbiw	r24, 0x01	; 1
     df0:	f1 f7       	brne	.-4      	; 0xdee <SHT31_SingleShot_Mode+0x32>
     df2:	00 c0       	rjmp	.+0      	; 0xdf4 <SHT31_SingleShot_Mode+0x38>
     df4:	00 00       	nop
	_delay_ms(1);
	TWIStart();
     df6:	0e 94 8a 07 	call	0xf14	; 0xf14 <TWIStart>
	TWIWrite(SHT31_ADDR_READ);
     dfa:	8b e8       	ldi	r24, 0x8B	; 139
     dfc:	0e 94 93 07 	call	0xf26	; 0xf26 <TWIWrite>
     e00:	ef ef       	ldi	r30, 0xFF	; 255
     e02:	fb e6       	ldi	r31, 0x6B	; 107
     e04:	31 97       	sbiw	r30, 0x01	; 1
     e06:	f1 f7       	brne	.-4      	; 0xe04 <SHT31_SingleShot_Mode+0x48>
     e08:	00 c0       	rjmp	.+0      	; 0xe0a <SHT31_SingleShot_Mode+0x4e>
     e0a:	00 00       	nop
	_delay_ms(10);
	vruc_temp[0] = TWIReadACK();
     e0c:	0e 94 9a 07 	call	0xf34	; 0xf34 <TWIReadACK>
     e10:	d8 2e       	mov	r13, r24
	vruc_temp[1] = TWIReadACK();
     e12:	0e 94 9a 07 	call	0xf34	; 0xf34 <TWIReadACK>
     e16:	c8 2e       	mov	r12, r24
	vruc_crc[0]  = TWIReadACK();
     e18:	0e 94 9a 07 	call	0xf34	; 0xf34 <TWIReadACK>
	vruc_hum[0]  = TWIReadACK();
     e1c:	0e 94 9a 07 	call	0xf34	; 0xf34 <TWIReadACK>
     e20:	18 2f       	mov	r17, r24
	vruc_hum[1]  = TWIReadACK();
     e22:	0e 94 9a 07 	call	0xf34	; 0xf34 <TWIReadACK>
     e26:	08 2f       	mov	r16, r24
	vruc_crc[1]  = TWIReadNACK();
     e28:	0e 94 a1 07 	call	0xf42	; 0xf42 <TWIReadNACK>
	TWIStop();
     e2c:	0e 94 90 07 	call	0xf20	; 0xf20 <TWIStop>
	vrui_tc = MAKEWORD(vruc_temp[0],vruc_temp[1]);
	vrui_rh = MAKEWORD(vruc_hum[0],vruc_hum[1]);
	*vrf_temp =  -45.0+175.0*(vrui_tc/65535.0);
     e30:	6d 2d       	mov	r22, r13
     e32:	70 e0       	ldi	r23, 0x00	; 0
     e34:	76 2f       	mov	r23, r22
     e36:	66 27       	eor	r22, r22
     e38:	6c 0d       	add	r22, r12
     e3a:	71 1d       	adc	r23, r1
     e3c:	80 e0       	ldi	r24, 0x00	; 0
     e3e:	90 e0       	ldi	r25, 0x00	; 0
     e40:	0e 94 05 09 	call	0x120a	; 0x120a <__floatunsisf>
     e44:	20 e0       	ldi	r18, 0x00	; 0
     e46:	3f ef       	ldi	r19, 0xFF	; 255
     e48:	4f e7       	ldi	r20, 0x7F	; 127
     e4a:	57 e4       	ldi	r21, 0x47	; 71
     e4c:	0e 94 64 08 	call	0x10c8	; 0x10c8 <__divsf3>
     e50:	20 e0       	ldi	r18, 0x00	; 0
     e52:	30 e0       	ldi	r19, 0x00	; 0
     e54:	4f e2       	ldi	r20, 0x2F	; 47
     e56:	53 e4       	ldi	r21, 0x43	; 67
     e58:	0e 94 93 09 	call	0x1326	; 0x1326 <__mulsf3>
     e5c:	20 e0       	ldi	r18, 0x00	; 0
     e5e:	30 e0       	ldi	r19, 0x00	; 0
     e60:	44 e3       	ldi	r20, 0x34	; 52
     e62:	52 e4       	ldi	r21, 0x42	; 66
     e64:	0e 94 f7 07 	call	0xfee	; 0xfee <__subsf3>
     e68:	f7 01       	movw	r30, r14
     e6a:	60 83       	st	Z, r22
     e6c:	71 83       	std	Z+1, r23	; 0x01
     e6e:	82 83       	std	Z+2, r24	; 0x02
     e70:	93 83       	std	Z+3, r25	; 0x03
	*vrf_hum  =  100.0*(vrui_rh/65535.0);	
     e72:	61 2f       	mov	r22, r17
     e74:	70 e0       	ldi	r23, 0x00	; 0
     e76:	76 2f       	mov	r23, r22
     e78:	66 27       	eor	r22, r22
     e7a:	60 0f       	add	r22, r16
     e7c:	71 1d       	adc	r23, r1
     e7e:	80 e0       	ldi	r24, 0x00	; 0
     e80:	90 e0       	ldi	r25, 0x00	; 0
     e82:	0e 94 05 09 	call	0x120a	; 0x120a <__floatunsisf>
     e86:	20 e0       	ldi	r18, 0x00	; 0
     e88:	3f ef       	ldi	r19, 0xFF	; 255
     e8a:	4f e7       	ldi	r20, 0x7F	; 127
     e8c:	57 e4       	ldi	r21, 0x47	; 71
     e8e:	0e 94 64 08 	call	0x10c8	; 0x10c8 <__divsf3>
     e92:	20 e0       	ldi	r18, 0x00	; 0
     e94:	30 e0       	ldi	r19, 0x00	; 0
     e96:	48 ec       	ldi	r20, 0xC8	; 200
     e98:	52 e4       	ldi	r21, 0x42	; 66
     e9a:	0e 94 93 09 	call	0x1326	; 0x1326 <__mulsf3>
     e9e:	68 83       	st	Y, r22
     ea0:	79 83       	std	Y+1, r23	; 0x01
     ea2:	8a 83       	std	Y+2, r24	; 0x02
     ea4:	9b 83       	std	Y+3, r25	; 0x03
     ea6:	df 91       	pop	r29
     ea8:	cf 91       	pop	r28
     eaa:	1f 91       	pop	r17
     eac:	0f 91       	pop	r16
     eae:	ff 90       	pop	r15
     eb0:	ef 90       	pop	r14
     eb2:	df 90       	pop	r13
     eb4:	cf 90       	pop	r12
     eb6:	08 95       	ret

00000eb8 <timer2_Init>:
void timer0_Enable(void) {
	set_TOIE0;
}
void timer2_Init(unsigned char scale) {
	// set up timer with prescaler
    TCCR2 &= 0b11111000;
     eb8:	95 b5       	in	r25, 0x25	; 37
     eba:	98 7f       	andi	r25, 0xF8	; 248
     ebc:	95 bd       	out	0x25, r25	; 37
    TCCR2 |= scale;
     ebe:	95 b5       	in	r25, 0x25	; 37
     ec0:	89 2b       	or	r24, r25
     ec2:	85 bd       	out	0x25, r24	; 37
	// initialize counter
	TCNT2 = 0;
     ec4:	14 bc       	out	0x24, r1	; 36
	
	// enable overflow interrupt
	TIMSK |= (1 << TOIE2);
     ec6:	89 b7       	in	r24, 0x39	; 57
     ec8:	80 64       	ori	r24, 0x40	; 64
     eca:	89 bf       	out	0x39, r24	; 57
	
	// enable global interrupts
	sei();
     ecc:	78 94       	sei
     ece:	08 95       	ret

00000ed0 <timer2_Disable>:
}

void timer2_Disable(void) {
    clr_TOIE2;
     ed0:	89 b7       	in	r24, 0x39	; 57
     ed2:	8f 7b       	andi	r24, 0xBF	; 191
     ed4:	89 bf       	out	0x39, r24	; 57
     ed6:	08 95       	ret

00000ed8 <timer2_Enable>:
}
void timer2_Enable(void) {
	set_TOIE2;
     ed8:	89 b7       	in	r24, 0x39	; 57
     eda:	80 64       	ori	r24, 0x40	; 64
     edc:	89 bf       	out	0x39, r24	; 57
     ede:	08 95       	ret

00000ee0 <TWIInit>:
#include "twi.h"
#include <util/delay.h>
#include "uart.h"

void TWIInit(unsigned long int vruli_freq)
{
     ee0:	9b 01       	movw	r18, r22
     ee2:	ac 01       	movw	r20, r24
	//set SCL to 400kHz
	TWSR = 0x00;
     ee4:	11 b8       	out	0x01, r1	; 1
	TWBR = (unsigned char)(((F_CPU/vruli_freq)-16)/8);
     ee6:	60 e0       	ldi	r22, 0x00	; 0
     ee8:	70 ec       	ldi	r23, 0xC0	; 192
     eea:	88 ea       	ldi	r24, 0xA8	; 168
     eec:	90 e0       	ldi	r25, 0x00	; 0
     eee:	0e 94 00 0a 	call	0x1400	; 0x1400 <__udivmodsi4>
     ef2:	da 01       	movw	r26, r20
     ef4:	c9 01       	movw	r24, r18
     ef6:	40 97       	sbiw	r24, 0x10	; 16
     ef8:	a1 09       	sbc	r26, r1
     efa:	b1 09       	sbc	r27, r1
     efc:	68 94       	set
     efe:	12 f8       	bld	r1, 2
     f00:	b6 95       	lsr	r27
     f02:	a7 95       	ror	r26
     f04:	97 95       	ror	r25
     f06:	87 95       	ror	r24
     f08:	16 94       	lsr	r1
     f0a:	d1 f7       	brne	.-12     	; 0xf00 <TWIInit+0x20>
     f0c:	80 b9       	out	0x00, r24	; 0
	//enable TWI
	TWCR = (1<<TWEN);
     f0e:	84 e0       	ldi	r24, 0x04	; 4
     f10:	86 bf       	out	0x36, r24	; 54
     f12:	08 95       	ret

00000f14 <TWIStart>:
}
//send start signal
void TWIStart(void)
{
	TWCR = (1<<TWINT)|(1<<TWSTA)|(1<<TWEN);
     f14:	84 ea       	ldi	r24, 0xA4	; 164
     f16:	86 bf       	out	0x36, r24	; 54
	while ((TWCR & (1<<TWINT)) == 0);
     f18:	06 b6       	in	r0, 0x36	; 54
     f1a:	07 fe       	sbrs	r0, 7
     f1c:	fd cf       	rjmp	.-6      	; 0xf18 <TWIStart+0x4>
}
     f1e:	08 95       	ret

00000f20 <TWIStop>:
//send stop signal
void TWIStop(void)
{
	TWCR = (1<<TWINT)|(1<<TWSTO)|(1<<TWEN);
     f20:	84 e9       	ldi	r24, 0x94	; 148
     f22:	86 bf       	out	0x36, r24	; 54
     f24:	08 95       	ret

00000f26 <TWIWrite>:
}

void TWIWrite(uint8_t u8data)
{
	TWDR = u8data;
     f26:	83 b9       	out	0x03, r24	; 3
	TWCR = (1<<TWINT)|(1<<TWEN);
     f28:	84 e8       	ldi	r24, 0x84	; 132
     f2a:	86 bf       	out	0x36, r24	; 54
	while ((TWCR & (1<<TWINT)) == 0);
     f2c:	06 b6       	in	r0, 0x36	; 54
     f2e:	07 fe       	sbrs	r0, 7
     f30:	fd cf       	rjmp	.-6      	; 0xf2c <TWIWrite+0x6>
}
     f32:	08 95       	ret

00000f34 <TWIReadACK>:
//read byte with ACK
uint8_t TWIReadACK(void)
{
	TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWEA);
     f34:	84 ec       	ldi	r24, 0xC4	; 196
     f36:	86 bf       	out	0x36, r24	; 54
	while ((TWCR & (1<<TWINT)) == 0);
     f38:	06 b6       	in	r0, 0x36	; 54
     f3a:	07 fe       	sbrs	r0, 7
     f3c:	fd cf       	rjmp	.-6      	; 0xf38 <TWIReadACK+0x4>
	return TWDR;
     f3e:	83 b1       	in	r24, 0x03	; 3
}
     f40:	08 95       	ret

00000f42 <TWIReadNACK>:
//read byte with NACK
uint8_t TWIReadNACK(void)
{
	TWCR = (1<<TWINT)|(1<<TWEN);
     f42:	84 e8       	ldi	r24, 0x84	; 132
     f44:	86 bf       	out	0x36, r24	; 54
	while ((TWCR & (1<<TWINT)) == 0);
     f46:	06 b6       	in	r0, 0x36	; 54
     f48:	07 fe       	sbrs	r0, 7
     f4a:	fd cf       	rjmp	.-6      	; 0xf46 <TWIReadNACK+0x4>
	return TWDR;
     f4c:	83 b1       	in	r24, 0x03	; 3
}
     f4e:	08 95       	ret

00000f50 <UART_SetBaudRate>:
***************************************************************************************************/
char UART_RxChar(void)
{
	while(util_IsBitCleared(UCSRA,RXC));  // Wait till the data is received
	return(UDR);                          // return the received char
}
     f50:	0f 93       	push	r16
     f52:	1f 93       	push	r17
     f54:	8b 01       	movw	r16, r22
     f56:	9c 01       	movw	r18, r24
     f58:	dc 01       	movw	r26, r24
     f5a:	cb 01       	movw	r24, r22
     f5c:	80 56       	subi	r24, 0x60	; 96
     f5e:	99 40       	sbci	r25, 0x09	; 9
     f60:	a1 09       	sbc	r26, r1
     f62:	b1 09       	sbc	r27, r1
     f64:	81 3a       	cpi	r24, 0xA1	; 161
     f66:	98 4b       	sbci	r25, 0xB8	; 184
     f68:	a1 40       	sbci	r26, 0x01	; 1
     f6a:	b1 05       	cpc	r27, r1
     f6c:	68 f5       	brcc	.+90     	; 0xfc8 <UART_SetBaudRate+0x78>
     f6e:	80 e0       	ldi	r24, 0x00	; 0
     f70:	90 e0       	ldi	r25, 0x00	; 0
     f72:	dc 01       	movw	r26, r24
     f74:	80 1b       	sub	r24, r16
     f76:	91 0b       	sbc	r25, r17
     f78:	a2 0b       	sbc	r26, r18
     f7a:	b3 0b       	sbc	r27, r19
     f7c:	88 0f       	add	r24, r24
     f7e:	99 1f       	adc	r25, r25
     f80:	aa 1f       	adc	r26, r26
     f82:	bb 1f       	adc	r27, r27
     f84:	88 0f       	add	r24, r24
     f86:	99 1f       	adc	r25, r25
     f88:	aa 1f       	adc	r26, r26
     f8a:	bb 1f       	adc	r27, r27
     f8c:	88 0f       	add	r24, r24
     f8e:	99 1f       	adc	r25, r25
     f90:	aa 1f       	adc	r26, r26
     f92:	bb 1f       	adc	r27, r27
     f94:	bc 01       	movw	r22, r24
     f96:	cd 01       	movw	r24, r26
     f98:	70 54       	subi	r23, 0x40	; 64
     f9a:	87 45       	sbci	r24, 0x57	; 87
     f9c:	9f 4f       	sbci	r25, 0xFF	; 255
     f9e:	00 0f       	add	r16, r16
     fa0:	11 1f       	adc	r17, r17
     fa2:	22 1f       	adc	r18, r18
     fa4:	33 1f       	adc	r19, r19
     fa6:	00 0f       	add	r16, r16
     fa8:	11 1f       	adc	r17, r17
     faa:	22 1f       	adc	r18, r18
     fac:	33 1f       	adc	r19, r19
     fae:	a9 01       	movw	r20, r18
     fb0:	98 01       	movw	r18, r16
     fb2:	22 0f       	add	r18, r18
     fb4:	33 1f       	adc	r19, r19
     fb6:	44 1f       	adc	r20, r20
     fb8:	55 1f       	adc	r21, r21
     fba:	22 0f       	add	r18, r18
     fbc:	33 1f       	adc	r19, r19
     fbe:	44 1f       	adc	r20, r20
     fc0:	55 1f       	adc	r21, r21
     fc2:	0e 94 00 0a 	call	0x1400	; 0x1400 <__udivmodsi4>
     fc6:	02 c0       	rjmp	.+4      	; 0xfcc <UART_SetBaudRate+0x7c>
     fc8:	27 e4       	ldi	r18, 0x47	; 71
     fca:	30 e0       	ldi	r19, 0x00	; 0
     fcc:	29 b9       	out	0x09, r18	; 9
     fce:	30 bd       	out	0x20, r19	; 32
     fd0:	1f 91       	pop	r17
     fd2:	0f 91       	pop	r16
     fd4:	08 95       	ret

00000fd6 <UART_Init>:
     fd6:	28 e9       	ldi	r18, 0x98	; 152
     fd8:	2a b9       	out	0x0a, r18	; 10
     fda:	26 e8       	ldi	r18, 0x86	; 134
     fdc:	20 bd       	out	0x20, r18	; 32
     fde:	1b b8       	out	0x0b, r1	; 11
     fe0:	0e 94 a8 07 	call	0xf50	; 0xf50 <UART_SetBaudRate>
     fe4:	08 95       	ret

00000fe6 <UART_TxChar>:

 * description  :This function is used to transmit a char through UART module.
***************************************************************************************************/
void UART_TxChar(char v_uartData_u8)
{
	while(util_IsBitCleared(UCSRA,UDRE)); // Wait till Transmitter(UDR) register becomes Empty
     fe6:	5d 9b       	sbis	0x0b, 5	; 11
     fe8:	fe cf       	rjmp	.-4      	; 0xfe6 <UART_TxChar>
	UDR =v_uartData_u8;                              // Load the data to be transmitted
     fea:	8c b9       	out	0x0c, r24	; 12
     fec:	08 95       	ret

00000fee <__subsf3>:
     fee:	50 58       	subi	r21, 0x80	; 128

00000ff0 <__addsf3>:
     ff0:	bb 27       	eor	r27, r27
     ff2:	aa 27       	eor	r26, r26
     ff4:	0e 94 0f 08 	call	0x101e	; 0x101e <__addsf3x>
     ff8:	0c 94 59 09 	jmp	0x12b2	; 0x12b2 <__fp_round>
     ffc:	0e 94 4b 09 	call	0x1296	; 0x1296 <__fp_pscA>
    1000:	38 f0       	brcs	.+14     	; 0x1010 <__addsf3+0x20>
    1002:	0e 94 52 09 	call	0x12a4	; 0x12a4 <__fp_pscB>
    1006:	20 f0       	brcs	.+8      	; 0x1010 <__addsf3+0x20>
    1008:	39 f4       	brne	.+14     	; 0x1018 <__addsf3+0x28>
    100a:	9f 3f       	cpi	r25, 0xFF	; 255
    100c:	19 f4       	brne	.+6      	; 0x1014 <__addsf3+0x24>
    100e:	26 f4       	brtc	.+8      	; 0x1018 <__addsf3+0x28>
    1010:	0c 94 48 09 	jmp	0x1290	; 0x1290 <__fp_nan>
    1014:	0e f4       	brtc	.+2      	; 0x1018 <__addsf3+0x28>
    1016:	e0 95       	com	r30
    1018:	e7 fb       	bst	r30, 7
    101a:	0c 94 42 09 	jmp	0x1284	; 0x1284 <__fp_inf>

0000101e <__addsf3x>:
    101e:	e9 2f       	mov	r30, r25
    1020:	0e 94 6a 09 	call	0x12d4	; 0x12d4 <__fp_split3>
    1024:	58 f3       	brcs	.-42     	; 0xffc <__addsf3+0xc>
    1026:	ba 17       	cp	r27, r26
    1028:	62 07       	cpc	r22, r18
    102a:	73 07       	cpc	r23, r19
    102c:	84 07       	cpc	r24, r20
    102e:	95 07       	cpc	r25, r21
    1030:	20 f0       	brcs	.+8      	; 0x103a <__addsf3x+0x1c>
    1032:	79 f4       	brne	.+30     	; 0x1052 <__addsf3x+0x34>
    1034:	a6 f5       	brtc	.+104    	; 0x109e <__addsf3x+0x80>
    1036:	0c 94 8c 09 	jmp	0x1318	; 0x1318 <__fp_zero>
    103a:	0e f4       	brtc	.+2      	; 0x103e <__addsf3x+0x20>
    103c:	e0 95       	com	r30
    103e:	0b 2e       	mov	r0, r27
    1040:	ba 2f       	mov	r27, r26
    1042:	a0 2d       	mov	r26, r0
    1044:	0b 01       	movw	r0, r22
    1046:	b9 01       	movw	r22, r18
    1048:	90 01       	movw	r18, r0
    104a:	0c 01       	movw	r0, r24
    104c:	ca 01       	movw	r24, r20
    104e:	a0 01       	movw	r20, r0
    1050:	11 24       	eor	r1, r1
    1052:	ff 27       	eor	r31, r31
    1054:	59 1b       	sub	r21, r25
    1056:	99 f0       	breq	.+38     	; 0x107e <__addsf3x+0x60>
    1058:	59 3f       	cpi	r21, 0xF9	; 249
    105a:	50 f4       	brcc	.+20     	; 0x1070 <__addsf3x+0x52>
    105c:	50 3e       	cpi	r21, 0xE0	; 224
    105e:	68 f1       	brcs	.+90     	; 0x10ba <__addsf3x+0x9c>
    1060:	1a 16       	cp	r1, r26
    1062:	f0 40       	sbci	r31, 0x00	; 0
    1064:	a2 2f       	mov	r26, r18
    1066:	23 2f       	mov	r18, r19
    1068:	34 2f       	mov	r19, r20
    106a:	44 27       	eor	r20, r20
    106c:	58 5f       	subi	r21, 0xF8	; 248
    106e:	f3 cf       	rjmp	.-26     	; 0x1056 <__addsf3x+0x38>
    1070:	46 95       	lsr	r20
    1072:	37 95       	ror	r19
    1074:	27 95       	ror	r18
    1076:	a7 95       	ror	r26
    1078:	f0 40       	sbci	r31, 0x00	; 0
    107a:	53 95       	inc	r21
    107c:	c9 f7       	brne	.-14     	; 0x1070 <__addsf3x+0x52>
    107e:	7e f4       	brtc	.+30     	; 0x109e <__addsf3x+0x80>
    1080:	1f 16       	cp	r1, r31
    1082:	ba 0b       	sbc	r27, r26
    1084:	62 0b       	sbc	r22, r18
    1086:	73 0b       	sbc	r23, r19
    1088:	84 0b       	sbc	r24, r20
    108a:	ba f0       	brmi	.+46     	; 0x10ba <__addsf3x+0x9c>
    108c:	91 50       	subi	r25, 0x01	; 1
    108e:	a1 f0       	breq	.+40     	; 0x10b8 <__addsf3x+0x9a>
    1090:	ff 0f       	add	r31, r31
    1092:	bb 1f       	adc	r27, r27
    1094:	66 1f       	adc	r22, r22
    1096:	77 1f       	adc	r23, r23
    1098:	88 1f       	adc	r24, r24
    109a:	c2 f7       	brpl	.-16     	; 0x108c <__addsf3x+0x6e>
    109c:	0e c0       	rjmp	.+28     	; 0x10ba <__addsf3x+0x9c>
    109e:	ba 0f       	add	r27, r26
    10a0:	62 1f       	adc	r22, r18
    10a2:	73 1f       	adc	r23, r19
    10a4:	84 1f       	adc	r24, r20
    10a6:	48 f4       	brcc	.+18     	; 0x10ba <__addsf3x+0x9c>
    10a8:	87 95       	ror	r24
    10aa:	77 95       	ror	r23
    10ac:	67 95       	ror	r22
    10ae:	b7 95       	ror	r27
    10b0:	f7 95       	ror	r31
    10b2:	9e 3f       	cpi	r25, 0xFE	; 254
    10b4:	08 f0       	brcs	.+2      	; 0x10b8 <__addsf3x+0x9a>
    10b6:	b0 cf       	rjmp	.-160    	; 0x1018 <__addsf3+0x28>
    10b8:	93 95       	inc	r25
    10ba:	88 0f       	add	r24, r24
    10bc:	08 f0       	brcs	.+2      	; 0x10c0 <__addsf3x+0xa2>
    10be:	99 27       	eor	r25, r25
    10c0:	ee 0f       	add	r30, r30
    10c2:	97 95       	ror	r25
    10c4:	87 95       	ror	r24
    10c6:	08 95       	ret

000010c8 <__divsf3>:
    10c8:	0e 94 78 08 	call	0x10f0	; 0x10f0 <__divsf3x>
    10cc:	0c 94 59 09 	jmp	0x12b2	; 0x12b2 <__fp_round>
    10d0:	0e 94 52 09 	call	0x12a4	; 0x12a4 <__fp_pscB>
    10d4:	58 f0       	brcs	.+22     	; 0x10ec <__divsf3+0x24>
    10d6:	0e 94 4b 09 	call	0x1296	; 0x1296 <__fp_pscA>
    10da:	40 f0       	brcs	.+16     	; 0x10ec <__divsf3+0x24>
    10dc:	29 f4       	brne	.+10     	; 0x10e8 <__divsf3+0x20>
    10de:	5f 3f       	cpi	r21, 0xFF	; 255
    10e0:	29 f0       	breq	.+10     	; 0x10ec <__divsf3+0x24>
    10e2:	0c 94 42 09 	jmp	0x1284	; 0x1284 <__fp_inf>
    10e6:	51 11       	cpse	r21, r1
    10e8:	0c 94 8d 09 	jmp	0x131a	; 0x131a <__fp_szero>
    10ec:	0c 94 48 09 	jmp	0x1290	; 0x1290 <__fp_nan>

000010f0 <__divsf3x>:
    10f0:	0e 94 6a 09 	call	0x12d4	; 0x12d4 <__fp_split3>
    10f4:	68 f3       	brcs	.-38     	; 0x10d0 <__divsf3+0x8>

000010f6 <__divsf3_pse>:
    10f6:	99 23       	and	r25, r25
    10f8:	b1 f3       	breq	.-20     	; 0x10e6 <__divsf3+0x1e>
    10fa:	55 23       	and	r21, r21
    10fc:	91 f3       	breq	.-28     	; 0x10e2 <__divsf3+0x1a>
    10fe:	95 1b       	sub	r25, r21
    1100:	55 0b       	sbc	r21, r21
    1102:	bb 27       	eor	r27, r27
    1104:	aa 27       	eor	r26, r26
    1106:	62 17       	cp	r22, r18
    1108:	73 07       	cpc	r23, r19
    110a:	84 07       	cpc	r24, r20
    110c:	38 f0       	brcs	.+14     	; 0x111c <__divsf3_pse+0x26>
    110e:	9f 5f       	subi	r25, 0xFF	; 255
    1110:	5f 4f       	sbci	r21, 0xFF	; 255
    1112:	22 0f       	add	r18, r18
    1114:	33 1f       	adc	r19, r19
    1116:	44 1f       	adc	r20, r20
    1118:	aa 1f       	adc	r26, r26
    111a:	a9 f3       	breq	.-22     	; 0x1106 <__divsf3_pse+0x10>
    111c:	35 d0       	rcall	.+106    	; 0x1188 <__divsf3_pse+0x92>
    111e:	0e 2e       	mov	r0, r30
    1120:	3a f0       	brmi	.+14     	; 0x1130 <__divsf3_pse+0x3a>
    1122:	e0 e8       	ldi	r30, 0x80	; 128
    1124:	32 d0       	rcall	.+100    	; 0x118a <__divsf3_pse+0x94>
    1126:	91 50       	subi	r25, 0x01	; 1
    1128:	50 40       	sbci	r21, 0x00	; 0
    112a:	e6 95       	lsr	r30
    112c:	00 1c       	adc	r0, r0
    112e:	ca f7       	brpl	.-14     	; 0x1122 <__divsf3_pse+0x2c>
    1130:	2b d0       	rcall	.+86     	; 0x1188 <__divsf3_pse+0x92>
    1132:	fe 2f       	mov	r31, r30
    1134:	29 d0       	rcall	.+82     	; 0x1188 <__divsf3_pse+0x92>
    1136:	66 0f       	add	r22, r22
    1138:	77 1f       	adc	r23, r23
    113a:	88 1f       	adc	r24, r24
    113c:	bb 1f       	adc	r27, r27
    113e:	26 17       	cp	r18, r22
    1140:	37 07       	cpc	r19, r23
    1142:	48 07       	cpc	r20, r24
    1144:	ab 07       	cpc	r26, r27
    1146:	b0 e8       	ldi	r27, 0x80	; 128
    1148:	09 f0       	breq	.+2      	; 0x114c <__divsf3_pse+0x56>
    114a:	bb 0b       	sbc	r27, r27
    114c:	80 2d       	mov	r24, r0
    114e:	bf 01       	movw	r22, r30
    1150:	ff 27       	eor	r31, r31
    1152:	93 58       	subi	r25, 0x83	; 131
    1154:	5f 4f       	sbci	r21, 0xFF	; 255
    1156:	3a f0       	brmi	.+14     	; 0x1166 <__divsf3_pse+0x70>
    1158:	9e 3f       	cpi	r25, 0xFE	; 254
    115a:	51 05       	cpc	r21, r1
    115c:	78 f0       	brcs	.+30     	; 0x117c <__divsf3_pse+0x86>
    115e:	0c 94 42 09 	jmp	0x1284	; 0x1284 <__fp_inf>
    1162:	0c 94 8d 09 	jmp	0x131a	; 0x131a <__fp_szero>
    1166:	5f 3f       	cpi	r21, 0xFF	; 255
    1168:	e4 f3       	brlt	.-8      	; 0x1162 <__divsf3_pse+0x6c>
    116a:	98 3e       	cpi	r25, 0xE8	; 232
    116c:	d4 f3       	brlt	.-12     	; 0x1162 <__divsf3_pse+0x6c>
    116e:	86 95       	lsr	r24
    1170:	77 95       	ror	r23
    1172:	67 95       	ror	r22
    1174:	b7 95       	ror	r27
    1176:	f7 95       	ror	r31
    1178:	9f 5f       	subi	r25, 0xFF	; 255
    117a:	c9 f7       	brne	.-14     	; 0x116e <__divsf3_pse+0x78>
    117c:	88 0f       	add	r24, r24
    117e:	91 1d       	adc	r25, r1
    1180:	96 95       	lsr	r25
    1182:	87 95       	ror	r24
    1184:	97 f9       	bld	r25, 7
    1186:	08 95       	ret
    1188:	e1 e0       	ldi	r30, 0x01	; 1
    118a:	66 0f       	add	r22, r22
    118c:	77 1f       	adc	r23, r23
    118e:	88 1f       	adc	r24, r24
    1190:	bb 1f       	adc	r27, r27
    1192:	62 17       	cp	r22, r18
    1194:	73 07       	cpc	r23, r19
    1196:	84 07       	cpc	r24, r20
    1198:	ba 07       	cpc	r27, r26
    119a:	20 f0       	brcs	.+8      	; 0x11a4 <__divsf3_pse+0xae>
    119c:	62 1b       	sub	r22, r18
    119e:	73 0b       	sbc	r23, r19
    11a0:	84 0b       	sbc	r24, r20
    11a2:	ba 0b       	sbc	r27, r26
    11a4:	ee 1f       	adc	r30, r30
    11a6:	88 f7       	brcc	.-30     	; 0x118a <__divsf3_pse+0x94>
    11a8:	e0 95       	com	r30
    11aa:	08 95       	ret

000011ac <__fixunssfsi>:
    11ac:	0e 94 72 09 	call	0x12e4	; 0x12e4 <__fp_splitA>
    11b0:	88 f0       	brcs	.+34     	; 0x11d4 <__fixunssfsi+0x28>
    11b2:	9f 57       	subi	r25, 0x7F	; 127
    11b4:	98 f0       	brcs	.+38     	; 0x11dc <__fixunssfsi+0x30>
    11b6:	b9 2f       	mov	r27, r25
    11b8:	99 27       	eor	r25, r25
    11ba:	b7 51       	subi	r27, 0x17	; 23
    11bc:	b0 f0       	brcs	.+44     	; 0x11ea <__fixunssfsi+0x3e>
    11be:	e1 f0       	breq	.+56     	; 0x11f8 <__fixunssfsi+0x4c>
    11c0:	66 0f       	add	r22, r22
    11c2:	77 1f       	adc	r23, r23
    11c4:	88 1f       	adc	r24, r24
    11c6:	99 1f       	adc	r25, r25
    11c8:	1a f0       	brmi	.+6      	; 0x11d0 <__fixunssfsi+0x24>
    11ca:	ba 95       	dec	r27
    11cc:	c9 f7       	brne	.-14     	; 0x11c0 <__fixunssfsi+0x14>
    11ce:	14 c0       	rjmp	.+40     	; 0x11f8 <__fixunssfsi+0x4c>
    11d0:	b1 30       	cpi	r27, 0x01	; 1
    11d2:	91 f0       	breq	.+36     	; 0x11f8 <__fixunssfsi+0x4c>
    11d4:	0e 94 8c 09 	call	0x1318	; 0x1318 <__fp_zero>
    11d8:	b1 e0       	ldi	r27, 0x01	; 1
    11da:	08 95       	ret
    11dc:	0c 94 8c 09 	jmp	0x1318	; 0x1318 <__fp_zero>
    11e0:	67 2f       	mov	r22, r23
    11e2:	78 2f       	mov	r23, r24
    11e4:	88 27       	eor	r24, r24
    11e6:	b8 5f       	subi	r27, 0xF8	; 248
    11e8:	39 f0       	breq	.+14     	; 0x11f8 <__fixunssfsi+0x4c>
    11ea:	b9 3f       	cpi	r27, 0xF9	; 249
    11ec:	cc f3       	brlt	.-14     	; 0x11e0 <__fixunssfsi+0x34>
    11ee:	86 95       	lsr	r24
    11f0:	77 95       	ror	r23
    11f2:	67 95       	ror	r22
    11f4:	b3 95       	inc	r27
    11f6:	d9 f7       	brne	.-10     	; 0x11ee <__fixunssfsi+0x42>
    11f8:	3e f4       	brtc	.+14     	; 0x1208 <__fixunssfsi+0x5c>
    11fa:	90 95       	com	r25
    11fc:	80 95       	com	r24
    11fe:	70 95       	com	r23
    1200:	61 95       	neg	r22
    1202:	7f 4f       	sbci	r23, 0xFF	; 255
    1204:	8f 4f       	sbci	r24, 0xFF	; 255
    1206:	9f 4f       	sbci	r25, 0xFF	; 255
    1208:	08 95       	ret

0000120a <__floatunsisf>:
    120a:	e8 94       	clt
    120c:	09 c0       	rjmp	.+18     	; 0x1220 <__floatsisf+0x12>

0000120e <__floatsisf>:
    120e:	97 fb       	bst	r25, 7
    1210:	3e f4       	brtc	.+14     	; 0x1220 <__floatsisf+0x12>
    1212:	90 95       	com	r25
    1214:	80 95       	com	r24
    1216:	70 95       	com	r23
    1218:	61 95       	neg	r22
    121a:	7f 4f       	sbci	r23, 0xFF	; 255
    121c:	8f 4f       	sbci	r24, 0xFF	; 255
    121e:	9f 4f       	sbci	r25, 0xFF	; 255
    1220:	99 23       	and	r25, r25
    1222:	a9 f0       	breq	.+42     	; 0x124e <__floatsisf+0x40>
    1224:	f9 2f       	mov	r31, r25
    1226:	96 e9       	ldi	r25, 0x96	; 150
    1228:	bb 27       	eor	r27, r27
    122a:	93 95       	inc	r25
    122c:	f6 95       	lsr	r31
    122e:	87 95       	ror	r24
    1230:	77 95       	ror	r23
    1232:	67 95       	ror	r22
    1234:	b7 95       	ror	r27
    1236:	f1 11       	cpse	r31, r1
    1238:	f8 cf       	rjmp	.-16     	; 0x122a <__floatsisf+0x1c>
    123a:	fa f4       	brpl	.+62     	; 0x127a <__floatsisf+0x6c>
    123c:	bb 0f       	add	r27, r27
    123e:	11 f4       	brne	.+4      	; 0x1244 <__floatsisf+0x36>
    1240:	60 ff       	sbrs	r22, 0
    1242:	1b c0       	rjmp	.+54     	; 0x127a <__floatsisf+0x6c>
    1244:	6f 5f       	subi	r22, 0xFF	; 255
    1246:	7f 4f       	sbci	r23, 0xFF	; 255
    1248:	8f 4f       	sbci	r24, 0xFF	; 255
    124a:	9f 4f       	sbci	r25, 0xFF	; 255
    124c:	16 c0       	rjmp	.+44     	; 0x127a <__floatsisf+0x6c>
    124e:	88 23       	and	r24, r24
    1250:	11 f0       	breq	.+4      	; 0x1256 <__floatsisf+0x48>
    1252:	96 e9       	ldi	r25, 0x96	; 150
    1254:	11 c0       	rjmp	.+34     	; 0x1278 <__floatsisf+0x6a>
    1256:	77 23       	and	r23, r23
    1258:	21 f0       	breq	.+8      	; 0x1262 <__floatsisf+0x54>
    125a:	9e e8       	ldi	r25, 0x8E	; 142
    125c:	87 2f       	mov	r24, r23
    125e:	76 2f       	mov	r23, r22
    1260:	05 c0       	rjmp	.+10     	; 0x126c <__floatsisf+0x5e>
    1262:	66 23       	and	r22, r22
    1264:	71 f0       	breq	.+28     	; 0x1282 <__floatsisf+0x74>
    1266:	96 e8       	ldi	r25, 0x86	; 134
    1268:	86 2f       	mov	r24, r22
    126a:	70 e0       	ldi	r23, 0x00	; 0
    126c:	60 e0       	ldi	r22, 0x00	; 0
    126e:	2a f0       	brmi	.+10     	; 0x127a <__floatsisf+0x6c>
    1270:	9a 95       	dec	r25
    1272:	66 0f       	add	r22, r22
    1274:	77 1f       	adc	r23, r23
    1276:	88 1f       	adc	r24, r24
    1278:	da f7       	brpl	.-10     	; 0x1270 <__floatsisf+0x62>
    127a:	88 0f       	add	r24, r24
    127c:	96 95       	lsr	r25
    127e:	87 95       	ror	r24
    1280:	97 f9       	bld	r25, 7
    1282:	08 95       	ret

00001284 <__fp_inf>:
    1284:	97 f9       	bld	r25, 7
    1286:	9f 67       	ori	r25, 0x7F	; 127
    1288:	80 e8       	ldi	r24, 0x80	; 128
    128a:	70 e0       	ldi	r23, 0x00	; 0
    128c:	60 e0       	ldi	r22, 0x00	; 0
    128e:	08 95       	ret

00001290 <__fp_nan>:
    1290:	9f ef       	ldi	r25, 0xFF	; 255
    1292:	80 ec       	ldi	r24, 0xC0	; 192
    1294:	08 95       	ret

00001296 <__fp_pscA>:
    1296:	00 24       	eor	r0, r0
    1298:	0a 94       	dec	r0
    129a:	16 16       	cp	r1, r22
    129c:	17 06       	cpc	r1, r23
    129e:	18 06       	cpc	r1, r24
    12a0:	09 06       	cpc	r0, r25
    12a2:	08 95       	ret

000012a4 <__fp_pscB>:
    12a4:	00 24       	eor	r0, r0
    12a6:	0a 94       	dec	r0
    12a8:	12 16       	cp	r1, r18
    12aa:	13 06       	cpc	r1, r19
    12ac:	14 06       	cpc	r1, r20
    12ae:	05 06       	cpc	r0, r21
    12b0:	08 95       	ret

000012b2 <__fp_round>:
    12b2:	09 2e       	mov	r0, r25
    12b4:	03 94       	inc	r0
    12b6:	00 0c       	add	r0, r0
    12b8:	11 f4       	brne	.+4      	; 0x12be <__fp_round+0xc>
    12ba:	88 23       	and	r24, r24
    12bc:	52 f0       	brmi	.+20     	; 0x12d2 <__fp_round+0x20>
    12be:	bb 0f       	add	r27, r27
    12c0:	40 f4       	brcc	.+16     	; 0x12d2 <__fp_round+0x20>
    12c2:	bf 2b       	or	r27, r31
    12c4:	11 f4       	brne	.+4      	; 0x12ca <__fp_round+0x18>
    12c6:	60 ff       	sbrs	r22, 0
    12c8:	04 c0       	rjmp	.+8      	; 0x12d2 <__fp_round+0x20>
    12ca:	6f 5f       	subi	r22, 0xFF	; 255
    12cc:	7f 4f       	sbci	r23, 0xFF	; 255
    12ce:	8f 4f       	sbci	r24, 0xFF	; 255
    12d0:	9f 4f       	sbci	r25, 0xFF	; 255
    12d2:	08 95       	ret

000012d4 <__fp_split3>:
    12d4:	57 fd       	sbrc	r21, 7
    12d6:	90 58       	subi	r25, 0x80	; 128
    12d8:	44 0f       	add	r20, r20
    12da:	55 1f       	adc	r21, r21
    12dc:	59 f0       	breq	.+22     	; 0x12f4 <__fp_splitA+0x10>
    12de:	5f 3f       	cpi	r21, 0xFF	; 255
    12e0:	71 f0       	breq	.+28     	; 0x12fe <__fp_splitA+0x1a>
    12e2:	47 95       	ror	r20

000012e4 <__fp_splitA>:
    12e4:	88 0f       	add	r24, r24
    12e6:	97 fb       	bst	r25, 7
    12e8:	99 1f       	adc	r25, r25
    12ea:	61 f0       	breq	.+24     	; 0x1304 <__fp_splitA+0x20>
    12ec:	9f 3f       	cpi	r25, 0xFF	; 255
    12ee:	79 f0       	breq	.+30     	; 0x130e <__fp_splitA+0x2a>
    12f0:	87 95       	ror	r24
    12f2:	08 95       	ret
    12f4:	12 16       	cp	r1, r18
    12f6:	13 06       	cpc	r1, r19
    12f8:	14 06       	cpc	r1, r20
    12fa:	55 1f       	adc	r21, r21
    12fc:	f2 cf       	rjmp	.-28     	; 0x12e2 <__fp_split3+0xe>
    12fe:	46 95       	lsr	r20
    1300:	f1 df       	rcall	.-30     	; 0x12e4 <__fp_splitA>
    1302:	08 c0       	rjmp	.+16     	; 0x1314 <__fp_splitA+0x30>
    1304:	16 16       	cp	r1, r22
    1306:	17 06       	cpc	r1, r23
    1308:	18 06       	cpc	r1, r24
    130a:	99 1f       	adc	r25, r25
    130c:	f1 cf       	rjmp	.-30     	; 0x12f0 <__fp_splitA+0xc>
    130e:	86 95       	lsr	r24
    1310:	71 05       	cpc	r23, r1
    1312:	61 05       	cpc	r22, r1
    1314:	08 94       	sec
    1316:	08 95       	ret

00001318 <__fp_zero>:
    1318:	e8 94       	clt

0000131a <__fp_szero>:
    131a:	bb 27       	eor	r27, r27
    131c:	66 27       	eor	r22, r22
    131e:	77 27       	eor	r23, r23
    1320:	cb 01       	movw	r24, r22
    1322:	97 f9       	bld	r25, 7
    1324:	08 95       	ret

00001326 <__mulsf3>:
    1326:	0e 94 a6 09 	call	0x134c	; 0x134c <__mulsf3x>
    132a:	0c 94 59 09 	jmp	0x12b2	; 0x12b2 <__fp_round>
    132e:	0e 94 4b 09 	call	0x1296	; 0x1296 <__fp_pscA>
    1332:	38 f0       	brcs	.+14     	; 0x1342 <__mulsf3+0x1c>
    1334:	0e 94 52 09 	call	0x12a4	; 0x12a4 <__fp_pscB>
    1338:	20 f0       	brcs	.+8      	; 0x1342 <__mulsf3+0x1c>
    133a:	95 23       	and	r25, r21
    133c:	11 f0       	breq	.+4      	; 0x1342 <__mulsf3+0x1c>
    133e:	0c 94 42 09 	jmp	0x1284	; 0x1284 <__fp_inf>
    1342:	0c 94 48 09 	jmp	0x1290	; 0x1290 <__fp_nan>
    1346:	11 24       	eor	r1, r1
    1348:	0c 94 8d 09 	jmp	0x131a	; 0x131a <__fp_szero>

0000134c <__mulsf3x>:
    134c:	0e 94 6a 09 	call	0x12d4	; 0x12d4 <__fp_split3>
    1350:	70 f3       	brcs	.-36     	; 0x132e <__mulsf3+0x8>

00001352 <__mulsf3_pse>:
    1352:	95 9f       	mul	r25, r21
    1354:	c1 f3       	breq	.-16     	; 0x1346 <__mulsf3+0x20>
    1356:	95 0f       	add	r25, r21
    1358:	50 e0       	ldi	r21, 0x00	; 0
    135a:	55 1f       	adc	r21, r21
    135c:	62 9f       	mul	r22, r18
    135e:	f0 01       	movw	r30, r0
    1360:	72 9f       	mul	r23, r18
    1362:	bb 27       	eor	r27, r27
    1364:	f0 0d       	add	r31, r0
    1366:	b1 1d       	adc	r27, r1
    1368:	63 9f       	mul	r22, r19
    136a:	aa 27       	eor	r26, r26
    136c:	f0 0d       	add	r31, r0
    136e:	b1 1d       	adc	r27, r1
    1370:	aa 1f       	adc	r26, r26
    1372:	64 9f       	mul	r22, r20
    1374:	66 27       	eor	r22, r22
    1376:	b0 0d       	add	r27, r0
    1378:	a1 1d       	adc	r26, r1
    137a:	66 1f       	adc	r22, r22
    137c:	82 9f       	mul	r24, r18
    137e:	22 27       	eor	r18, r18
    1380:	b0 0d       	add	r27, r0
    1382:	a1 1d       	adc	r26, r1
    1384:	62 1f       	adc	r22, r18
    1386:	73 9f       	mul	r23, r19
    1388:	b0 0d       	add	r27, r0
    138a:	a1 1d       	adc	r26, r1
    138c:	62 1f       	adc	r22, r18
    138e:	83 9f       	mul	r24, r19
    1390:	a0 0d       	add	r26, r0
    1392:	61 1d       	adc	r22, r1
    1394:	22 1f       	adc	r18, r18
    1396:	74 9f       	mul	r23, r20
    1398:	33 27       	eor	r19, r19
    139a:	a0 0d       	add	r26, r0
    139c:	61 1d       	adc	r22, r1
    139e:	23 1f       	adc	r18, r19
    13a0:	84 9f       	mul	r24, r20
    13a2:	60 0d       	add	r22, r0
    13a4:	21 1d       	adc	r18, r1
    13a6:	82 2f       	mov	r24, r18
    13a8:	76 2f       	mov	r23, r22
    13aa:	6a 2f       	mov	r22, r26
    13ac:	11 24       	eor	r1, r1
    13ae:	9f 57       	subi	r25, 0x7F	; 127
    13b0:	50 40       	sbci	r21, 0x00	; 0
    13b2:	9a f0       	brmi	.+38     	; 0x13da <__mulsf3_pse+0x88>
    13b4:	f1 f0       	breq	.+60     	; 0x13f2 <__mulsf3_pse+0xa0>
    13b6:	88 23       	and	r24, r24
    13b8:	4a f0       	brmi	.+18     	; 0x13cc <__mulsf3_pse+0x7a>
    13ba:	ee 0f       	add	r30, r30
    13bc:	ff 1f       	adc	r31, r31
    13be:	bb 1f       	adc	r27, r27
    13c0:	66 1f       	adc	r22, r22
    13c2:	77 1f       	adc	r23, r23
    13c4:	88 1f       	adc	r24, r24
    13c6:	91 50       	subi	r25, 0x01	; 1
    13c8:	50 40       	sbci	r21, 0x00	; 0
    13ca:	a9 f7       	brne	.-22     	; 0x13b6 <__mulsf3_pse+0x64>
    13cc:	9e 3f       	cpi	r25, 0xFE	; 254
    13ce:	51 05       	cpc	r21, r1
    13d0:	80 f0       	brcs	.+32     	; 0x13f2 <__mulsf3_pse+0xa0>
    13d2:	0c 94 42 09 	jmp	0x1284	; 0x1284 <__fp_inf>
    13d6:	0c 94 8d 09 	jmp	0x131a	; 0x131a <__fp_szero>
    13da:	5f 3f       	cpi	r21, 0xFF	; 255
    13dc:	e4 f3       	brlt	.-8      	; 0x13d6 <__mulsf3_pse+0x84>
    13de:	98 3e       	cpi	r25, 0xE8	; 232
    13e0:	d4 f3       	brlt	.-12     	; 0x13d6 <__mulsf3_pse+0x84>
    13e2:	86 95       	lsr	r24
    13e4:	77 95       	ror	r23
    13e6:	67 95       	ror	r22
    13e8:	b7 95       	ror	r27
    13ea:	f7 95       	ror	r31
    13ec:	e7 95       	ror	r30
    13ee:	9f 5f       	subi	r25, 0xFF	; 255
    13f0:	c1 f7       	brne	.-16     	; 0x13e2 <__mulsf3_pse+0x90>
    13f2:	fe 2b       	or	r31, r30
    13f4:	88 0f       	add	r24, r24
    13f6:	91 1d       	adc	r25, r1
    13f8:	96 95       	lsr	r25
    13fa:	87 95       	ror	r24
    13fc:	97 f9       	bld	r25, 7
    13fe:	08 95       	ret

00001400 <__udivmodsi4>:
    1400:	a1 e2       	ldi	r26, 0x21	; 33
    1402:	1a 2e       	mov	r1, r26
    1404:	aa 1b       	sub	r26, r26
    1406:	bb 1b       	sub	r27, r27
    1408:	fd 01       	movw	r30, r26
    140a:	0d c0       	rjmp	.+26     	; 0x1426 <__udivmodsi4_ep>

0000140c <__udivmodsi4_loop>:
    140c:	aa 1f       	adc	r26, r26
    140e:	bb 1f       	adc	r27, r27
    1410:	ee 1f       	adc	r30, r30
    1412:	ff 1f       	adc	r31, r31
    1414:	a2 17       	cp	r26, r18
    1416:	b3 07       	cpc	r27, r19
    1418:	e4 07       	cpc	r30, r20
    141a:	f5 07       	cpc	r31, r21
    141c:	20 f0       	brcs	.+8      	; 0x1426 <__udivmodsi4_ep>
    141e:	a2 1b       	sub	r26, r18
    1420:	b3 0b       	sbc	r27, r19
    1422:	e4 0b       	sbc	r30, r20
    1424:	f5 0b       	sbc	r31, r21

00001426 <__udivmodsi4_ep>:
    1426:	66 1f       	adc	r22, r22
    1428:	77 1f       	adc	r23, r23
    142a:	88 1f       	adc	r24, r24
    142c:	99 1f       	adc	r25, r25
    142e:	1a 94       	dec	r1
    1430:	69 f7       	brne	.-38     	; 0x140c <__udivmodsi4_loop>
    1432:	60 95       	com	r22
    1434:	70 95       	com	r23
    1436:	80 95       	com	r24
    1438:	90 95       	com	r25
    143a:	9b 01       	movw	r18, r22
    143c:	ac 01       	movw	r20, r24
    143e:	bd 01       	movw	r22, r26
    1440:	cf 01       	movw	r24, r30
    1442:	08 95       	ret

00001444 <__tablejump2__>:
    1444:	ee 0f       	add	r30, r30
    1446:	ff 1f       	adc	r31, r31
    1448:	05 90       	lpm	r0, Z+
    144a:	f4 91       	lpm	r31, Z
    144c:	e0 2d       	mov	r30, r0
    144e:	09 94       	ijmp

00001450 <__umulhisi3>:
    1450:	a2 9f       	mul	r26, r18
    1452:	b0 01       	movw	r22, r0
    1454:	b3 9f       	mul	r27, r19
    1456:	c0 01       	movw	r24, r0
    1458:	a3 9f       	mul	r26, r19
    145a:	70 0d       	add	r23, r0
    145c:	81 1d       	adc	r24, r1
    145e:	11 24       	eor	r1, r1
    1460:	91 1d       	adc	r25, r1
    1462:	b2 9f       	mul	r27, r18
    1464:	70 0d       	add	r23, r0
    1466:	81 1d       	adc	r24, r1
    1468:	11 24       	eor	r1, r1
    146a:	91 1d       	adc	r25, r1
    146c:	08 95       	ret

0000146e <eeprom_read_word>:
    146e:	a8 e1       	ldi	r26, 0x18	; 24
    1470:	b0 e0       	ldi	r27, 0x00	; 0
    1472:	42 e0       	ldi	r20, 0x02	; 2
    1474:	50 e0       	ldi	r21, 0x00	; 0
    1476:	0c 94 44 0a 	jmp	0x1488	; 0x1488 <eeprom_read_blraw>

0000147a <eeprom_write_word>:
    147a:	0e 94 52 0a 	call	0x14a4	; 0x14a4 <eeprom_write_byte>
    147e:	27 2f       	mov	r18, r23
    1480:	0c 94 53 0a 	jmp	0x14a6	; 0x14a6 <eeprom_write_r18>

00001484 <eeprom_read_block>:
    1484:	dc 01       	movw	r26, r24
    1486:	cb 01       	movw	r24, r22

00001488 <eeprom_read_blraw>:
    1488:	fc 01       	movw	r30, r24
    148a:	e1 99       	sbic	0x1c, 1	; 28
    148c:	fe cf       	rjmp	.-4      	; 0x148a <eeprom_read_blraw+0x2>
    148e:	06 c0       	rjmp	.+12     	; 0x149c <eeprom_read_blraw+0x14>
    1490:	ff bb       	out	0x1f, r31	; 31
    1492:	ee bb       	out	0x1e, r30	; 30
    1494:	e0 9a       	sbi	0x1c, 0	; 28
    1496:	31 96       	adiw	r30, 0x01	; 1
    1498:	0d b2       	in	r0, 0x1d	; 29
    149a:	0d 92       	st	X+, r0
    149c:	41 50       	subi	r20, 0x01	; 1
    149e:	50 40       	sbci	r21, 0x00	; 0
    14a0:	b8 f7       	brcc	.-18     	; 0x1490 <eeprom_read_blraw+0x8>
    14a2:	08 95       	ret

000014a4 <eeprom_write_byte>:
    14a4:	26 2f       	mov	r18, r22

000014a6 <eeprom_write_r18>:
    14a6:	e1 99       	sbic	0x1c, 1	; 28
    14a8:	fe cf       	rjmp	.-4      	; 0x14a6 <eeprom_write_r18>
    14aa:	9f bb       	out	0x1f, r25	; 31
    14ac:	8e bb       	out	0x1e, r24	; 30
    14ae:	2d bb       	out	0x1d, r18	; 29
    14b0:	0f b6       	in	r0, 0x3f	; 63
    14b2:	f8 94       	cli
    14b4:	e2 9a       	sbi	0x1c, 2	; 28
    14b6:	e1 9a       	sbi	0x1c, 1	; 28
    14b8:	0f be       	out	0x3f, r0	; 63
    14ba:	01 96       	adiw	r24, 0x01	; 1
    14bc:	08 95       	ret

000014be <_exit>:
    14be:	f8 94       	cli

000014c0 <__stop_program>:
    14c0:	ff cf       	rjmp	.-2      	; 0x14c0 <__stop_program>
